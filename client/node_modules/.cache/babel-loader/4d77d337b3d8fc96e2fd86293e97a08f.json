{"ast":null,"code":"var _jsxFileName = \"/Users/nao/code/bathroom/client/src/WaitingRoom.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport axios from 'axios'; // import Stall from './Stall';\n\nimport EnterStall from './EnterStall';\n\nclass WaitingRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = props.pusher;\n    this.presenceChannel = null;\n    this.state = {\n      visitors: [],\n      // pusher members object\n      visitorList: [] // member id array\n\n    };\n    this.handleEnterStallClick = this.handleEnterStallClick.bind(this);\n  }\n\n  handleEnterStallClick(e) {\n    this.props.onEnterStall(e); // this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    // this.stallChannel.bind('pusher:subscription_succeeded', () => {\n    //   console.log(this.stallChannel.members.me.id + ' joined stall 1');\n    //   this.setState({\n    //     stalls: {'1': this.stallChannel.members},\n    //   },\n    //   console.log(this.stallChannel.members));\n    // });\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.presenceChannel = this.pusher.subscribe('presence-bathroom');\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(this.presenceChannel.members); // console.log(this.presenceChannel.members.me.id + ' joined WaitingRoom');\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(this.presenceChannel.members); // console.log('someone left WaitingRoom');\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe('presence-bathroom');\n    this.presenceChannel.unbind(); // remove all handlers defined in DidMount()\n    // console.log('unmounting WaitingRoom');\n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members\n    }, () => {\n      var membersList = [];\n      members.each(member => {\n        membersList.push(member.id);\n      });\n      this.setState({\n        visitorList: membersList\n      });\n    } // console.log('number of visitors updated')\n    );\n  }\n\n  render() {\n    let visitorsList = null;\n\n    if (this.state.visitors != []) {\n      visitorsList = this.state.visitorList.map(visitor => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, visitor));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"waiting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"In line: \", this.state.visitors.count, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, visitorsList), /*#__PURE__*/React.createElement(EnterStall, {\n      onClick: this.handleEnterStallClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default WaitingRoom;","map":{"version":3,"sources":["/Users/nao/code/bathroom/client/src/WaitingRoom.js"],"names":["React","Component","Pusher","axios","EnterStall","WaitingRoom","constructor","props","pusher","presenceChannel","state","visitors","visitorList","handleEnterStallClick","bind","e","onEnterStall","componentWillMount","componentDidMount","subscribe","updateVisitors","members","componentWillUnmount","unsubscribe","unbind","setState","membersList","each","member","push","id","render","visitorsList","map","visitor","count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport axios from 'axios';\n// import Stall from './Stall';\nimport EnterStall from './EnterStall';\n\nclass WaitingRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = props.pusher;\n    this.presenceChannel = null;\n    this.state = {\n      visitors: [], // pusher members object\n      visitorList: [], // member id array\n    };\n    this.handleEnterStallClick = this.handleEnterStallClick.bind(this);\n  }\n\n  handleEnterStallClick(e) {\n    this.props.onEnterStall(e);\n    // this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    // this.stallChannel.bind('pusher:subscription_succeeded', () => {\n    //   console.log(this.stallChannel.members.me.id + ' joined stall 1');\n    //   this.setState({\n    //     stalls: {'1': this.stallChannel.members},\n    //   },\n    //   console.log(this.stallChannel.members));\n    // });\n  }\n\n  componentWillMount() {\n    \n  }\n\n  componentDidMount() {\n    this.presenceChannel = this.pusher.subscribe('presence-bathroom');\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      // console.log(this.presenceChannel.members.me.id + ' joined WaitingRoom');\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      // console.log('someone left WaitingRoom');\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe('presence-bathroom');\n    this.presenceChannel.unbind(); // remove all handlers defined in DidMount()\n    // console.log('unmounting WaitingRoom');\n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members,\n    },\n    () => {\n      var membersList = [];\n      members.each((member) => {\n        membersList.push(member.id);\n      });\n      this.setState({ visitorList: membersList });\n    }\n    // console.log('number of visitors updated')\n    )\n  }\n\n  render() {\n    let visitorsList = null;\n    if (this.state.visitors != []) {\n      visitorsList = this.state.visitorList.map((visitor) => \n        <li>{visitor}</li>\n      );\n    }\n    return (\n      <div id=\"waiting\">\n        In line: {this.state.visitors.count}<br/>\n        <ul>{visitorsList}</ul>\n        <EnterStall onClick={this.handleEnterStallClick} />\n      </div>\n    );\n  }\n\n}\n\nexport default WaitingRoom;"]},"metadata":{},"sourceType":"module"}