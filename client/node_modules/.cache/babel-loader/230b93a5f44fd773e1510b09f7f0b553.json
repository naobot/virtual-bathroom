{"ast":null,"code":"var _jsxFileName = \"/Users/nao/code/bathroom/client/src/WaitingRoom.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport Stall from './Stall';\n\nclass WaitingRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visitors: []\n    };\n    this.handleVacancyChange = this.handleVacancyChange.bind(this);\n    this.updateVisitors = this.updateVisitors(this, members);\n  }\n\n  handleVacancyChange() {\n    console.log('vacant stall found');\n  }\n\n  componentDidMount() {\n    const pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true\n    });\n    const presenceChannel = pusher.subscribe('presence-bathroomQueue');\n    presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n    presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n    presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Currently online: \", this.state.visitors.count, /*#__PURE__*/React.createElement(Stall, {\n      vacant: vacant,\n      onVacancyChange: this.handleVacancyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default WaitingRoom;","map":{"version":3,"sources":["/Users/nao/code/bathroom/client/src/WaitingRoom.js"],"names":["React","Component","Pusher","Stall","WaitingRoom","constructor","props","state","visitors","handleVacancyChange","bind","updateVisitors","members","console","log","componentDidMount","pusher","cluster","encrypted","presenceChannel","subscribe","setState","render","count","vacant"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoB,IAApB,EAA0BC,OAA1B,CAAtB;AACD;;AAEDH,EAAAA,mBAAmB,GAAG;AACpBI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,IAAId,MAAJ,CAAW,sBAAX,EAAmC;AAChDe,MAAAA,OAAO,EAAE,KADuC;AAEhDC,MAAAA,SAAS,EAAE;AAFqC,KAAnC,CAAf;AAKA,UAAMC,eAAe,GAAGH,MAAM,CAACI,SAAP,CAAiB,wBAAjB,CAAxB;AACAD,IAAAA,eAAe,CAACT,IAAhB,CAAqB,+BAArB,EAAsD,MAAM;AAC1D,WAAKC,cAAL,CAAoBQ,eAAe,CAACP,OAApC;AACD,KAFD;AAGAO,IAAAA,eAAe,CAACT,IAAhB,CAAqB,qBAArB,EAA4C,MAAM;AAChD,WAAKC,cAAL,CAAoBQ,eAAe,CAACP,OAApC;AACD,KAFD;AAGAO,IAAAA,eAAe,CAACT,IAAhB,CAAqB,uBAArB,EAA8C,MAAM;AAClD,WAAKC,cAAL,CAAoBQ,eAAe,CAACP,OAApC;AACD,KAFD;AAID;;AAEDD,EAAAA,cAAc,CAACC,OAAD,EAAU;AACtB,SAAKS,QAAL,CAAc;AACZb,MAAAA,QAAQ,EAAEI;AADE,KAAd;AAGD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACqB,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,KADzC,eAEE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAEC,MADV;AAEE,MAAA,eAAe,EAAE,KAAKf,mBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAQD;;AAhDiC;;AAoDpC,eAAeL,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport Stall from './Stall';\n\nclass WaitingRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visitors: [],\n    };\n    this.handleVacancyChange = this.handleVacancyChange.bind(this);\n    this.updateVisitors = this.updateVisitors(this, members);\n  }\n\n  handleVacancyChange() {\n    console.log('vacant stall found')\n  }\n\n  componentDidMount() {\n    const pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true,\n    });\n\n    const presenceChannel = pusher.subscribe('presence-bathroomQueue');\n    presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n    presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n    presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(presenceChannel.members);\n    });\n     \n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members,\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"users\">\n        Currently online: {this.state.visitors.count}\n        <Stall\n          vacant={vacant}\n          onVacancyChange={this.handleVacancyChange} />\n      </div>\n    );\n  }\n\n}\n\nexport default WaitingRoom;"]},"metadata":{},"sourceType":"module"}