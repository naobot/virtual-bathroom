{"ast":null,"code":"var _jsxFileName = \"/Users/nao/code/bathroom/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js'; // import Stall from './Stall';\n\nimport EnterStall from './EnterStall';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true\n    });\n    this.presenceChannel = this.pusher.subscribe('presence-bathroom');\n    this.stallChannel = null;\n    this.state = {\n      visitors: [],\n      stalls: {\n        '1': {\n          count: 0\n        }\n      }\n    };\n    this.handleVacancyChange = this.handleVacancyChange.bind(this);\n    this.handleEnterStallClick = this.handleEnterStallClick.bind(this);\n  }\n\n  handleVacancyChange() {\n    console.log('vacant stall found');\n  }\n\n  handleEnterStallClick() {\n    console.log('entering stall');\n    this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    this.stallChannel.bind('pusher:subscription_succeeded', () => {\n      console.log(this.stallChannel.members.me.id + ' joined stall 1');\n      this.setState({\n        stalls: {\n          '1': this.stallChannel.members\n        }\n      }, console.log(this.stallChannel.members));\n    });\n  }\n\n  componentDidMount() {\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      console.log(this.presenceChannel.members.me.id + ' joined WaitingRoom');\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      console.log('someone left WaitingRoom');\n    });\n  }\n\n  componentWillUnmount() {\n    this.presenceChannel.unbind(); // remove all handlers defined in DidMount()\n\n    this.pusher.unsubscribe(this.presenceChannel);\n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members\n    }, console.log('number of visitors updated'));\n  }\n\n  render() {\n    const vacant = 4;\n    let enterStallButton;\n\n    if (vacant > 0) {\n      enterStallButton = /*#__PURE__*/React.createElement(EnterStall, {\n        onClick: this.handleEnterStallClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \"Currently online (total): \", this.state.visitors.count, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 62\n      }\n    }), \"In line: \", this.state.visitors.count - this.state.stalls['1'].count, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 76\n      }\n    }), \"Stall: \", this.state.stalls['1'].count, \" / 4\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), enterStallButton);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nao/code/bathroom/client/src/App.js"],"names":["React","Component","Pusher","EnterStall","App","constructor","props","pusher","cluster","encrypted","presenceChannel","subscribe","stallChannel","state","visitors","stalls","count","handleVacancyChange","bind","handleEnterStallClick","console","log","members","me","id","setState","componentDidMount","updateVisitors","componentWillUnmount","unbind","unsubscribe","render","vacant","enterStallButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\n// import Stall from './Stall';\nimport EnterStall from './EnterStall';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true,\n    });\n    this.presenceChannel = this.pusher.subscribe('presence-bathroom');\n    this.stallChannel = null;\n    this.state = {\n      visitors: [],\n      stalls: {\n        '1': {count: 0},\n      }\n    };\n    this.handleVacancyChange = this.handleVacancyChange.bind(this);\n    this.handleEnterStallClick = this.handleEnterStallClick.bind(this);\n  }\n\n  handleVacancyChange() {\n    console.log('vacant stall found');\n  }\n\n  handleEnterStallClick() {\n    console.log('entering stall');\n    this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    this.stallChannel.bind('pusher:subscription_succeeded', () => {\n      console.log(this.stallChannel.members.me.id + ' joined stall 1');\n      this.setState({\n        stalls: {'1': this.stallChannel.members},\n      },\n      console.log(this.stallChannel.members));\n    });\n  }\n\n  componentDidMount() {\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      console.log(this.presenceChannel.members.me.id + ' joined WaitingRoom');\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateVisitors(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', () => {\n      this.updateVisitors(this.presenceChannel.members);\n      console.log('someone left WaitingRoom');\n    });\n  }\n\n  componentWillUnmount() {\n    this.presenceChannel.unbind(); // remove all handlers defined in DidMount()\n    this.pusher.unsubscribe(this.presenceChannel);\n\n  }\n\n  updateVisitors(members) {\n    this.setState({\n      visitors: members,\n    },\n    console.log('number of visitors updated'))\n  }\n\n  render() {\n    const vacant = 4;\n    let enterStallButton;\n    if (vacant > 0) {\n      enterStallButton = <EnterStall onClick={this.handleEnterStallClick} />;\n    }\n\n    return (\n      <div id=\"app\">\n        Currently online (total): {this.state.visitors.count}<br/>\n        In line: {this.state.visitors.count - this.state.stalls['1'].count}<br/>\n        Stall: {this.state.stalls['1'].count} / 4\n        <br/>\n        {enterStallButton}\n      </div>\n    );\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}