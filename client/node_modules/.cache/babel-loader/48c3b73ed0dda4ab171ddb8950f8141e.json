{"ast":null,"code":"var _jsxFileName = \"/Users/nao/code/bathroom/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport WaitingRoom from './WaitingRoom';\nimport Stall from './Stall';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true\n    });\n    this.state = {\n      currentView: null,\n      stalls: []\n    };\n    this.max_occupancy = 4; // ADJUST AS NEEDED\n\n    this.num_stalls = 4; // ADJUST AS NEEDED\n\n    this.handleEnterStall = this.handleEnterStall.bind(this); // this.handleVacancyChange = this.handleVacancyChange.bind(this);\n  }\n\n  handleEnterStall(e) {\n    var stallList = Array.from(this.state.stalls);\n    var stallEntered = false;\n\n    for (var i = this.stalls.length - 1; !stallEntered && i >= 0; i--) {\n      var currentStall = this.stalls[i];\n\n      if (currentStall.occupants < this.max_occupancy) {\n        this.setState(currentState => {\n          return {\n            currentView: currentStall\n          };\n        }, () => {\n          stallEntered = true;\n        });\n      }\n    } // this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    // this.stallChannel.bind('pusher:subscription_succeeded', () => {\n    //   console.log(this.stallChannel.members.me.id + ' joined stall 1');\n    //   this.setState({\n    //     stalls: {'1': this.stallChannel.members},\n    //   },\n    //   console.log(this.stallChannel.members));\n    // });\n\n  }\n\n  componentWillMount() {\n    // create stalls\n    var stallList = [];\n\n    for (var i = 0; i < this.num_stalls; i++) {\n      var stallId = i;\n      let stallComponent = /*#__PURE__*/React.createElement(Stall, {\n        id: stallId,\n        pusher: this.pusher,\n        max: this.max_occupancy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }\n      });\n      stalls.push({\n        id: stallId,\n        component: stallComponent,\n        occupants: 0\n      });\n    }\n\n    this.setState(currentState => {\n      return {\n        stalls: stallList,\n        currentView: /*#__PURE__*/React.createElement(WaitingRoom, {\n          onEnterStall: this.handleEnterStall,\n          pusher: this.pusher,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }\n        })\n      };\n    });\n  } // componentDidMount() {\n  // }\n  // componentWillUnmount() {\n  // }\n  // updateVisitors(members) {\n  //   this.setState({\n  //     visitors: members,\n  //   },\n  //   // console.log('number of visitors updated')\n  //   )\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, this.state.currentView);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nao/code/bathroom/client/src/App.js"],"names":["React","Component","Pusher","WaitingRoom","Stall","App","constructor","props","pusher","cluster","encrypted","state","currentView","stalls","max_occupancy","num_stalls","handleEnterStall","bind","e","stallList","Array","from","stallEntered","i","length","currentStall","occupants","setState","currentState","componentWillMount","stallId","stallComponent","push","id","component","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport WaitingRoom from './WaitingRoom';\nimport Stall from './Stall';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = new Pusher('93d5b6db6095187f5ef6', {\n      cluster: 'us2',\n      encrypted: true,\n    });\n    this.state = {\n      currentView: null,\n      stalls: [],\n    };\n    this.max_occupancy = 4; // ADJUST AS NEEDED\n    this.num_stalls = 4; // ADJUST AS NEEDED\n    this.handleEnterStall = this.handleEnterStall.bind(this);\n    // this.handleVacancyChange = this.handleVacancyChange.bind(this);\n  }\n\n  handleEnterStall(e) {\n    var stallList = Array.from(this.state.stalls);\n    var stallEntered = false;\n\n    for (var i = this.stalls.length - 1; !stallEntered && i >= 0; i--) {\n      var currentStall = this.stalls[i];\n      if (currentStall.occupants < this.max_occupancy) {\n        this.setState(currentState => {\n          return {\n            currentView: currentStall,\n          };\n        }, () => { stallEntered = true });\n      }\n    }\n\n    // this.stallChannel = this.pusher.subscribe('presence-stall-1');\n    // this.stallChannel.bind('pusher:subscription_succeeded', () => {\n    //   console.log(this.stallChannel.members.me.id + ' joined stall 1');\n    //   this.setState({\n    //     stalls: {'1': this.stallChannel.members},\n    //   },\n    //   console.log(this.stallChannel.members));\n    // });\n  }\n\n  componentWillMount() {\n    // create stalls\n    var stallList = [];\n    for (var i = 0; i < this.num_stalls; i++) {\n      var stallId = i;\n      let stallComponent = <Stall id={stallId} pusher={this.pusher} max={this.max_occupancy} />;\n      stalls.push({\n        id: stallId,\n        component: stallComponent,\n        occupants: 0,\n      });\n    }\n    this.setState(currentState => {\n      return {\n        stalls: stallList,\n        currentView: <WaitingRoom onEnterStall={this.handleEnterStall} pusher={this.pusher} />\n      };\n    });\n  }\n\n  // componentDidMount() {\n  // }\n\n  // componentWillUnmount() {\n  // }\n\n  // updateVisitors(members) {\n  //   this.setState({\n  //     visitors: members,\n  //   },\n  //   // console.log('number of visitors updated')\n  //   )\n  // }\n\n  render() {\n    return (\n      <div id=\"app\">\n        {this.state.currentView}\n      </div>\n    );\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}