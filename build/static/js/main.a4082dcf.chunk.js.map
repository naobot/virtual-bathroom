{"version":3,"sources":["assets/actions/1_enter-the-bathroom.png","assets/actions/2_audio-guide.png","assets/actions/3_enter-stall.png","assets/actions/4_stare-at-ceiling.png","assets/actions/4_cry.png","assets/actions/4_check-phone.png","assets/actions/4_talk-to-stranger.png","assets/fixed-phone.png","Button.js","Hallway.js","WaitingRoom.js","Stall.js","Mirrors.js","Hotspots.js","Chatlist.js","Chatbox.js","Phone.js","Room.js","App.js","serviceWorker.js","index.js","assets/actions/5_flush.png"],"names":["module","exports","Button","this","props","style","position","top","left","width","noAnimate","className","src","imgSrc","onClick","text","altText","PureComponent","Hallway","handleEnterBathroomClick","bind","e","onEnterBathroom","data-depth","id","enterButton","audioGuideButton","WaitingRoom","pusher","state","me","occupants","count","countOccupants","sortByEntryTime","handleEnterRoomClick","presenceChannel","subscribe","setState","members","updateOccupants","console","log","each","member","info","isSpy","onOccupancyChange","onEnterRoom","sorted","forEach","push","sort","a","b","parseInt","entry_time","trueOccupants","trueOccupantsList","positioningCss","visitor","toString","key","ahead","map","indexOf","enterMessage","enterStallButton","Component","Stall","handleNavigationClick","target","stallId","direction","children","Mirrors","currentView","Hotspots","Chatlist","stallMap","myHex","getColorStyle","hex","color","chats","chat","userhex","userName","message","dotenv","config","path","Chatbox","channel","myId","userHex","handleTextChange","scrollToBottom","data","test","messagesEnd","scrollIntoView","behavior","keyCode","ENDPOINT","payload","channel_name","name","userId","axios","post","value","float","clear","ref","el","type","placeholder","onChange","onKeyDown","Phone","PSEUDONYMS","Room","occupantsByStall","max_occupancy","max","restartParallax","currentState","length","Math","floor","slice","container","document","getElementById","Parallax","selector","pointerEvents","navUpButton","navLeftButton","navDownButton","navRightButton","navBackButton","App","Pusher","process","cluster","encrypted","spy","auth","params","timeoutId","rooms","pusher_app_members","inLine","num_rooms","countMembers","spyOn","startInactivityCheck","userActivityDetected","handleExitStall","handleEnterWaiting","handleEnterRoom","handleMouseMove","updateMemberCount","i","updateAppMembers","unsubscribe","num","location","roomId","roomsCopy","Array","from","channelName","split","pop","window","setTimeout","disconnect","clearTimeout","connection","alert","reload","roomEntered","currentRoom","hide","room","onEnterWaiting","onMouseMove","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a4082dcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1_enter-the-bathroom.502d7cca.png\";","module.exports = __webpack_public_path__ + \"static/media/2_audio-guide.3e47e291.png\";","module.exports = __webpack_public_path__ + \"static/media/3_enter-stall.cce7620f.png\";","module.exports = __webpack_public_path__ + \"static/media/4_stare-at-ceiling.93cd2b33.png\";","module.exports = __webpack_public_path__ + \"static/media/4_cry.868afc73.png\";","module.exports = __webpack_public_path__ + \"static/media/4_check-phone.54827428.png\";","module.exports = __webpack_public_path__ + \"static/media/4_talk-to-stranger.a4f44315.png\";","module.exports = __webpack_public_path__ + \"static/media/fixed-phone.492aec9b.png\";","import React, { PureComponent } from 'react';\n\nclass Button extends PureComponent {\n  render() {\n    const { top, left, width } = this.props;\n    const style = {\n      position: 'absolute',\n      top: top,\n      left: left,\n      width: width,\n    }\n    if (this.props.noAnimate) {\n      var className = \"nav-image\"\n    }\n    else {\n      var className = \"nav-image animate__animated animate__infinite animate__slower animate__pulse\"\n    }\n    return (\n      <img className={className} src={this.props.imgSrc} onClick={this.props.onClick} text={this.props.altText} style={style} />\n    );\n  }\n\n}\n\nexport default Button;","import React, { PureComponent } from 'react';\nimport Button from './Button';\nimport enterButton from './assets/actions/1_enter-the-bathroom.png';\nimport audioGuideButton from './assets/actions/2_audio-guide.png';\n\nclass Hallway extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleEnterBathroomClick = this.handleEnterBathroomClick.bind(this);\n  }\n\n  // componentDidMount() {\n  //   console.log(`waiting room mounted`);\n  // }\n\n  handleEnterBathroomClick(e) {\n    this.props.onEnterBathroom(e);\n  }\n\n  render() {\n    return (\n      <div className=\"view layer\" data-depth=\"0.1\">\n        <div id=\"hallway\" className=\"content\">\n          <div className=\"hotspots layer\" data-depth=\"0.1\">\n            <Button onClick={this.handleEnterBathroomClick} altText=\"Enter Bathroom\" imgSrc={enterButton} width=\"300px\" top=\"70vh\" left=\"29vw\" />\n            <Button noAnimate={true} altText=\"Audio Guide\" imgSrc={audioGuideButton} width=\"200px\" top=\"12vh\" left=\"12vw\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Hallway;","import React, { Component } from 'react';\nimport Button from './Button';\nimport enterStallButton from './assets/actions/3_enter-stall.png';\n\nclass WaitingRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = props.pusher;\n    this.state = {\n      me: 0,\n      occupants: { count: 0 },\n    }\n    this.countOccupants = this.countOccupants.bind(this);\n    this.sortByEntryTime = this.sortByEntryTime.bind(this);\n    this.handleEnterRoomClick = this.handleEnterRoomClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.presenceChannel = this.pusher.subscribe(`presence-bathroom`);\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.setState({ me: this.presenceChannel.members.me.id });\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', () => {\n      this.updateOccupants(this.presenceChannel.members);\n      console.log(`WaitingRoom.js: someone left Room ${this.id}`);\n    });\n  }\n\n  // returns true count of occupants (excluding spies)\n  countOccupants(members) {\n    var count = 0;\n    // console.log(`countOccupants() members in line:`);\n    if (members.count > 0) {\n      members.each(function (member) {\n        if (!member.info.isSpy) { count++ }\n      });\n    }\n    return count\n  }\n\n  updateOccupants(members) {\n    console.log(`WaitingRoom.js updateOccupants: numOccupants ${members.count}`);\n    this.setState({\n      occupants: members,\n    }, () => this.props.onOccupancyChange(this.countOccupants(members), 'waiting'));\n  }\n\n\n  handleEnterRoomClick(e) {\n    this.props.onEnterRoom(e);\n  }\n\n  sortByEntryTime(occupants) {\n    let sorted = []\n    occupants.forEach((member) => {\n      sorted.push(member);\n    });\n    return sorted.sort((a,b) => {\n      if (parseInt(a.info.entry_time) < parseInt(b.info.entry_time)) { return -1 }\n      if (parseInt(a.info.entry_time) > parseInt(b.info.entry_time)) { return 1 }\n      return 0\n    });\n  }\n\n  render() {\n    let trueOccupants = [];\n    let trueOccupantsList = [];\n    const positioningCss = {\n      top: \"50vh\",\n      left: \"60vw\",\n      width: \"300px\",\n      position: \"relative\",\n    };\n    if (this.state.occupants.count > 0) {\n      this.state.occupants.each((visitor) => {\n        if (!visitor.info.isSpy) {\n          trueOccupants.push(visitor);\n          if (visitor.id.toString() === this.state.me.toString()) {\n            trueOccupantsList.push(<li key={visitor.id.toString()}><strong>{visitor.id}</strong> ({visitor.info.entry_time})</li>);\n          }\n          else {\n            trueOccupantsList.push(<li key={visitor.id.toString()}>{visitor.id} ({visitor.info.entry_time})</li>);\n          }\n        }\n      });\n      trueOccupants = this.sortByEntryTime(trueOccupants);\n    }\n    \n    let ahead = trueOccupants.map((e) => { return e.id.toString() }).indexOf(this.state.me.toString());\n    let enterMessage = 'please wait...';\n    if (ahead > 0) {\n      enterMessage = <div className=\"please-wait\" style={positioningCss}>PLEASE WAIT...<br/>&nbsp;&nbsp;&nbsp;&nbsp;{ahead} ahead of you in line</div>;\n    }\n    else {\n      enterMessage = <Button onClick={this.handleEnterRoomClick} altText=\"Enter Stall\" imgSrc={enterStallButton} top={positioningCss.top} left={positioningCss.left} width={positioningCss.width} />;\n    }\n    console.log('In line:');\n    console.log(`\\t${this.countOccupants(this.state.occupants)}`)\n    return (\n      <div className=\"view layer\" data-depth=\"0.1\">\n      \n        <div id=\"waiting\" className=\"content\">\n          <div className=\"hotspots layer\" data-depth=\"0.1\">\n            {enterMessage}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default WaitingRoom;","import React, { PureComponent } from 'react';\nimport Button from './Button';\n\nexport default class Stall extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleNavigationClick = this.handleNavigationClick.bind(this);\n  }\n\n  // componentDidMount() {\n  //   console.log(`waiting room mounted`);\n  // }\n\n  handleNavigationClick(target) {\n    this.props.handleNavigationClick(target);\n  }\n\n  render() {\n    const stallId = `stall-${this.props.direction}`;\n    return (     \n      <div id={stallId} className=\"layer\" data-depth=\"0.2\">\n        <div className=\"content\">\n            {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport Button from './Button';\n\nclass Mirrors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: 'bathroom',\n    }\n    // this.handleNavigationClick = this.handleNavigationClick.bind(this);\n  }\n\n  // handleNavigationClick(target) {\n  //   if (target === 'waiting') {\n  //     this.props.onEnterWaiting();\n  //   }\n  //   else if (target === 'bathroom') {\n  //     this.setState({ currentView: 'bathroom' });\n  //   }\n  // }\n\n  render() {\n    var currentView = null;\n    // if (this.state.currentView === 'bathroom') {\n    //   currentView = \n    //     <div>\n    //       <Button onClick={() => this.handleNavigationClick('waiting')} buttonText=\"Wait for Stall\" />\n    //     </div>;\n    // }\n\n    return (\n      <div id={this.state.currentView} className=\"view layer\" data-depth=\"0.2\">\n        <div className=\"content\">\n          {currentView}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Mirrors;","import React, { PureComponent } from 'react';\n\nexport default class Hotspots extends PureComponent {\n  constructor(props) { \n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div className=\"hotspots layer\" data-depth=\"0.1\">{this.props.children}</div>\n    );\n  }\n\n}\n\n\n","import React, { Component } from 'react';\n\nexport default class Chatlist extends Component {\n  constructor(props) {\n    super(props);\n    this.stallMap = props.stallMap;\n    this.myHex = props.myHex;\n    this.getColorStyle = this.getColorStyle.bind(this);\n  }\n\n  getColorStyle(hex) {\n    return { color: hex }\n  }\n\n  render() {\n    const chats = this.props.chats.map(chat => \n      <div>\n        <div className=\"row show-grid\">\n          <div className=\"col-xs-12\">\n            \n            <div className=\"chatMessage\">\n              <div key={chat.id} className=\"box\">\n                <p>\n                  <strong style={this.getColorStyle(chat.userhex)}>{ chat.userhex === this.myHex ? 'you' : chat.userName }</strong>\n                </p>\n                <p>{chat.message}</p>\n              </div>\n            </div>\n            </div>\n          </div>\n        </div>\n      );\n\n\n    return (\n      <div id=\"chatlist\">\n        <ul>\n          {chats}\n        </ul>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport Chatlist from './Chatlist';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nexport default class Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.channel = props.channel;\n    this.myId = props.channel.members.me.id;\n    this.userName = props.userName;\n    this.userHex = props.userHex;\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n    this.state = {\n      text: '',\n      chats: [],\n    }\n  }\n\n  componentDidMount() {\n    this.channel.bind('message', data => {\n      this.setState({ chats: [...this.state.chats, data], test: '' });\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  handleTextChange(e) {\n    if (e.keyCode === 13) { // hit enter on keyboard\n      const payload = {\n        channel_name: this.channel.name,\n        userId: this.myId,\n        userName: this.userName,\n        userhex: this.userHex,\n        message: this.state.text,\n      };\n      var ENDPOINT;\n      if (process.env.NODE_ENV === 'development' ) {\n        ENDPOINT = 'http://localhost:5000/'\n      }\n      else {\n        ENDPOINT = 'https://virtual-bathroom.herokuapp.com/'\n      }\n      axios.post(ENDPOINT + 'message', payload);\n      this.setState({ text: '' });\n      this.scrollToBottom();\n    }\n    else {\n      this.setState({ text: e.target.value });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chatbox\" className=\"component-box\">\n        <h2>Chatbox</h2>\n        <div className=\"chatlist-container\">\n          <Chatlist chats={this.state.chats} myHex={this.userHex} />\n          <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          value={this.state.text}\n          placeholder=\"chat here...\"\n          onChange={this.handleTextChange}\n          onKeyDown={this.handleTextChange}\n          />\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Phone extends Component {\n  constructor(props) { \n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"phone-layer\" className=\"bg-layer\"></div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport Stall from './Stall';\nimport Button from './Button';\nimport Mirrors from './Mirrors';\nimport Hotspots from './Hotspots';\nimport Chatbox from './Chatbox';\nimport Phone from './Phone';\n// import StallUp from './StallUp';\n// import StallLeft from './StallLeft';\n// import StallRight from './StallRight';\n// import StallDown from './StallDown';\n// import StallBack from './StallBack';\nimport Parallax from 'parallax-js';\nimport navUpButton from './assets/actions/4_stare-at-ceiling.png';\nimport navDownButton from './assets/actions/4_cry.png';\nimport navLeftButton from './assets/actions/4_check-phone.png';\nimport navRightButton from './assets/actions/4_talk-to-stranger.png';\nimport navBackButton from './assets/actions/5_flush.png';\nimport phoneImg from './assets/fixed-phone.png';\n\nconst PSEUDONYMS = [\n  'someone',\n  'somebody',\n  'a stallmate',\n  'a person',\n  'another person',\n  'person in next stall',\n  'some person',\n];\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = props.pusher;\n    this.id = props.id;\n    this.presenceChannel = null;\n    this.me = null;\n    this.state = {\n      occupantsByStall: {},\n      occupants: {count: 0},\n      userHex: '#ffffff',\n      currentView: 'stall-front',\n      userName: 'someone',\n    };\n    this.max_occupancy = props.max;\n    this.updateOccupants = this.updateOccupants.bind(this);\n    this.countOccupants = this.countOccupants.bind(this);\n    this.handleNavigationClick = this.handleNavigationClick.bind(this);\n    this.restartParallax = this.restartParallax.bind(this);\n  }\n\n  componentDidMount() {\n    this.presenceChannel = this.pusher.subscribe(`presence-room-${this.id}`);\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.me = this.presenceChannel.members.me.id;\n      this.setState(currentState => {\n        return {\n          userName: PSEUDONYMS[parseInt(this.me) % PSEUDONYMS.length],\n          userHex: '#' + Math.floor(parseInt(this.presenceChannel.members.me.id)*16777215).toString(16).slice(-6)\n        }\n      }, console.log(`my username: ${this.state.userName}`));\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_added', (member) => {\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', (member) => {\n      this.updateOccupants(this.presenceChannel.members);\n      console.log(`Stall.js: ${member.id} left Stall ${this.id}`);\n    });\n  }\n\n  // returns true count of occupants (excluding spies)\n  countOccupants(members) {\n    var count = 0;\n    // console.log(`countOccupants() members in stall ${this.id}:`);\n    if (members.count > 0) {\n      members.each(function (member) {\n        if (!member.info.isSpy) { count++ }\n      });\n    }\n    return count\n  }\n\n  restartParallax() {\n    var container = document.getElementById('app');\n    var parallaxInstance = new Parallax(container, {\n      selector: '.layer',\n      pointerEvents: true,\n    });\n  }\n\n  updateOccupants(members) {\n    // console.log(`Stall.js updateOccupants: stall id ${this.id}, numOccupants ${members.count}`);\n    this.setState({\n      occupants: members,\n    }, () => this.props.onOccupancyChange(this.countOccupants(members), 'room', this.id));\n  }\n\n  handleNavigationClick(target) {\n    this.setState({ currentView: target });\n  }\n\n  render() {\n    var currentView = \n          <Stall direction=\"front\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-up')} \n                altText=\"Stare At Ceiling\"\n                imgSrc={navUpButton}\n                width=\"20vw\"\n                top=\"20vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-left')} \n                altText=\"Check Phone\"\n                imgSrc={navLeftButton}\n                width=\"16vw\"\n                top=\"60vh\"\n                left=\"18vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-down')} \n                altText=\"Cry\"\n                imgSrc={navDownButton}\n                width=\"11vw\"\n                top=\"95vh\"\n                left=\"51vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-right')} \n                altText=\"Talk to Stranger\"\n                imgSrc={navRightButton}\n                width=\"23vw\"\n                top=\"66vh\"\n                left=\"85vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-back')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"77vh\"\n                left=\"70vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n    switch (this.state.currentView) {\n      case 'stall-up':\n        currentView = \n          <Stall direction=\"up\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"77vh\"\n                left=\"70vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        this.restartParallax();\n        break;\n      case 'stall-left':\n        currentView = \n          <Stall direction=\"left\" handleNavigationClick={this.handleNavigationClick}>\n            <Phone />\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"77vh\"\n                left=\"70vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        this.restartParallax();\n        break;\n      case 'stall-right': // contains chatbox\n        currentView = \n          <Stall direction=\"right\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"77vh\"\n                left=\"70vw\"\n                 />\n              <Chatbox userName={this.state.userName} userHex={this.state.userHex} occupantsByStall={this.state.occupantsByStall} channel={this.presenceChannel} />\n            </Hotspots>\n          </Stall>;\n        this.restartParallax();\n        break;\n      case 'stall-down':\n        currentView = \n          <Stall direction=\"down\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"77vh\"\n                left=\"70vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        this.restartParallax();\n        break;\n      case 'stall-back':\n        currentView = \n          <Stall direction=\"back\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('mirrors')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                width=\"23vw\"\n                top=\"41vh\"\n                left=\"43vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        this.restartParallax();\n        break;\n      case 'mirrors':\n        currentView =\n          <Mirrors />;\n          this.restartParallax();\n      case 'stall-front':\n      default:\n        this.restartParallax();\n        break;\n    }\n    return (\n      <div className=\"view\">\n        <div className=\"hide\">\n          <h2>Room {this.id}: {this.countOccupants(this.state.occupants)} / {this.max_occupancy}</h2>\n        </div>\n        {currentView}\n      </div>\n    );\n  }\n\n}\n\nexport default Room;","import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport dotenv from 'dotenv';\n\n// import Audio from './Audio';\n// import audioSrc from './assets/sounds/bg-audio-sketch.mp3';\n\nimport Hallway from './Hallway';\nimport WaitingRoom from './WaitingRoom';\nimport Room from './Room';\nimport Mirrors from './Mirrors';\n\nimport Parallax from 'parallax-js';\nimport 'animate.css/animate.min.css';\nimport './css/normalize.css';\nimport './css/App.css';\n\ndotenv.config({ path: '.env' });\nconst LOGGING = null;\n// const LOGGING = process.env.NODE_ENV === 'development';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n      encrypted: true,\n    });\n    this.spy = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      encrypted: true,\n      cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n      auth: {\n        params: {\n          isSpy: true\n        }\n      }\n    });\n    this.me = null;\n    this.timeoutId = null;\n    this.state = {\n      currentView: { type: 'hallway', id: null },\n      rooms: [], // array of Room components\n      pusher_app_members: { count: 0 }, // pusher members object\n      inLine: 0,\n      message: '',\n    };\n    this.max_occupancy = 3; // ADJUST AS NEEDED\n    this.num_rooms = 2; // ADJUST AS NEEDED\n    this.countMembers = this.countMembers.bind(this);\n    this.spyOn = this.spyOn.bind(this);\n    this.startInactivityCheck = this.startInactivityCheck.bind(this);\n    this.userActivityDetected = this.userActivityDetected.bind(this);\n    this.handleExitStall = this.handleExitStall.bind(this);\n    this.handleEnterWaiting = this.handleEnterWaiting.bind(this);\n    this.handleEnterRoom = this.handleEnterRoom.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.restartParallax = this.restartParallax.bind(this);\n    this.updateMemberCount = this.updateMemberCount.bind(this);\n  }\n\n\n  componentDidMount() {\n    // parallax effect for background\n    this.restartParallax();\n\n    this.spyOn('presence-bathroom', 'waiting');\n    for (var i = 0; i < this.num_rooms; i++) {\n      this.spyOn(`presence-room-${i}`, 'room');\n    }\n    // main app channel\n    this.presenceChannel = this.pusher.subscribe('presence-app');\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.me = this.presenceChannel.members.me.id;\n      this.updateAppMembers(this.presenceChannel.members);\n      if (LOGGING) { console.log(this.presenceChannel.members.me.id + ' subscribed to WaitingRoom'); }\n    });\n    this.presenceChannel.bind('pusher:member_added', () => {\n      this.updateAppMembers(this.presenceChannel.members);\n      if (LOGGING) {\n        console.log(`currentView: ${this.state.currentView}`);\n        console.log('someone joined Bathroom App');\n      }\n    });\n    // someone left App\n    this.presenceChannel.bind('pusher:member_removed', (member) => {\n      this.updateAppMembers(this.presenceChannel.members);\n      if (LOGGING) { console.log(`${member.id} left Bathroom App`); }\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe('presence-app');\n  }\n\n  // returns a the number of members connected to channel\n  // excluding spies\n  countMembers(channel) {\n    if (LOGGING) { console.log(\"countMembers(): Current users in \" + channel.name + \":\"); }\n    var count = 0;\n    // var roomId = channel.name.split('-').pop();\n    channel.members.each(function (member) {\n      if (!member.info.isSpy) { console.log(\"user: \" + member.id); count++; }\n    });\n    return count\n  };\n\n  restartParallax() {\n    var container = document.getElementById('app');\n    var parallaxInstance = new Parallax(container, {\n      selector: '.layer',\n      pointerEvents: true,\n    });\n  }\n\n  // generic 'true' member count (excludes spies)\n  updateMemberCount(num, location, roomId) {\n    if (location === 'room') {\n      var roomsCopy = Array.from(this.state.rooms);\n      roomsCopy[roomId] = { id: roomId, occupants: num };\n      this.setState(currentState => {\n        return {\n          rooms: roomsCopy,\n        }\n      });\n    }\n    else if (location === 'waiting') {\n      this.setState(currentState => {\n        return { inLine: num }\n      });\n    }\n  }\n\n  // in app\n  updateAppMembers(members) {\n    this.setState({\n      pusher_app_members: members,\n    });\n  }\n\n  // spy on a channel\n  spyOn(channelName, location) {\n    var channel = this.spy.subscribe(channelName);\n    var roomId = null;\n    if (location === 'room') {\n      roomId = channelName.split('-').pop();\n    }\n    if (LOGGING) {\n      console.log(`trying to spy on ${channel.name}`);\n    }\n    channel.bind(\"pusher:subscription_succeeded\", () => {\n      if (LOGGING) { console.log(`spying on ${channelName}`); }\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n    channel.bind(\"pusher:member_added\", () => {\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n    channel.bind(\"pusher:member_removed\", () => {\n      if (LOGGING) { console.log(`someone left ${channelName}`); }\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n  };\n\n  startInactivityCheck() {\n    this.timeoutId = window.setTimeout(() => {\n      this.pusher.disconnect();\n    }, 10 * 60 * 1000); // SET TIMEOUT: time out after 5 minutes\n  }\n\n  userActivityDetected() {\n    if (this.timeoutId !== null) {\n      window.clearTimeout(this.timeoutId);\n    }\n    if (this.pusher.connection.state === 'disconnected') {\n      alert(`You've been ushered out of the bathroom for taking so long! Please line up again to re-enter the bathroom.`);\n      window.location.reload();\n    }\n    this.startInactivityCheck();\n  }\n\n  /* BEGIN: View transition functions \n    -----------------------------------\n  */\n  // stall -> mirrors\n  handleExitStall(e) {\n    this.setState(currentState => {\n      return {\n        currentView: { type: 'mirrors', id: null },\n      }\n    },\n    () => { this.restartParallax();\n    });\n  }\n\n  // bathroom -> wait for stall\n  handleEnterWaiting(e) {\n    this.setState(currentState => {\n      return {\n        currentView: { type: 'waiting', id: null },\n      }\n    },\n    () => { this.restartParallax(); });\n  }\n\n  // waiting -> stall\n  handleEnterRoom(e) {\n    var roomEntered = false;\n    this.pusher.unsubscribe('presence-bathroom');\n\n    for (var i = 0; !roomEntered && i < this.state.rooms.length; i++) {\n      var currentRoom = {...this.state.rooms[i]};\n      let roomId = i;\n      if (currentRoom.occupants < this.max_occupancy) {\n        this.updateMemberCount(currentRoom.occupants+1, 'room', i);\n        this.setState(currentState => {\n          return {\n            currentView: { type: 'room', id: roomId },\n          };\n        }, () => { this.restartParallax() });\n        roomEntered = true;\n      }\n      else {\n        console.log(`Room ${i} full`);\n      }\n    }\n\n    if (!roomEntered) {\n      alert('no vacant rooms available!');\n    }\n  }\n\n  handleMouseMove() {\n    this.userActivityDetected();\n  }\n\n  render() {\n    var hide = 'hide';\n    // if (process.env.NODE_ENV === 'production') {\n    //   hide = 'hide';\n    // }\n    if (LOGGING) { console.log('render() rooms:') }\n    if (LOGGING) { console.log(this.state.rooms); hide = null }\n    console.log(`running in ${process.env.NODE_ENV} mode`);\n    const rooms = this.state.rooms.map((room) =>\n      <li key={room.id.toString()}><strong>Room {room.id}:</strong> {room.occupants}/{this.max_occupancy}</li>\n    );\n\n    // let visitorsList = [];\n    // if (this.state.pusher_app_members.count > 0) {\n    //   this.state.pusher_app_members.each((visitor) => \n    //     visitorsList.push(<li key={visitor.id.toString()}>{visitor.id}</li>)\n    //   );\n    // }\n    // default view is hallway\n    let currentView = <Hallway onEnterBathroom={this.handleEnterWaiting} />\n    if (this.state.currentView.type === 'bathroom') {\n      currentView = <Mirrors onEnterWaiting={this.handleEnterWaiting} />\n    }\n    else if (this.state.currentView.type === 'waiting') { \n      currentView = <WaitingRoom onEnterRoom={this.handleEnterRoom} pusher={this.pusher} onOccupancyChange={this.updateMemberCount} />; \n    }\n    if (this.state.currentView.type === 'room') {\n      currentView = <Room id={this.state.currentView.id} pusher={this.pusher} max={this.max_occupancy} onOccupancyChange={this.updateMemberCount} />;\n    }\n    return (\n      <div id=\"app\" onMouseMove={this.handleMouseMove}>\n        <div id=\"debug-console\" className={hide}>\n          <div>\n            THE APP IS RUNNING IN <strong>{process.env.NODE_ENV}</strong> MODE<br/>\n            this box is for development purposes only\n          </div>\n          <div>\n            <div>Number of Rooms: {this.num_rooms}</div>\n            <div><strong>Current Users:</strong> {this.state.pusher_app_members.count}</div>\n            <div><strong>In line:</strong> {this.state.inLine}</div>\n          </div>\n          <div>\n            <strong>Rooms:</strong>\n            {rooms}\n          </div>\n        </div>\n        {currentView}\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/5_flush.88b88b51.png\";"],"sourceRoot":""}