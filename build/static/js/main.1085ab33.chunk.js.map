{"version":3,"sources":["Alert.js","Button.js","constants.js","Loading.js","Background.js","Hallway.js","Audio.js","WaitingRoom.js","Stall.js","Mirrors.js","Hotspots.js","Chatlist.js","Chatbox.js","BigPhone.js","Graffiti.js","Phone.js","BigNote.js","Note.js","Flush.js","Room.js","App.js","serviceWorker.js","index.js"],"names":["Alert","props","buttonMsg","cancel","this","cancellable","className","onClick","onCancel","children","onOK","PureComponent","Button","style","position","top","left","width","noAnimate","animate","imgSrc","src","text","altText","restartParallax","selector","container","document","getElementById","Parallax","pointerEvents","scrollToBottom","element","scrollIntoView","behavior","animationName","Promise","resolve","reject","node","querySelector","classList","add","addEventListener","handleAnimationEnd","remove","removeEventListener","createMarkup","msgString","__html","processMsgLinks","replaceAll","match","console","log","includes","PSEUDONYMS","CONVOS","time","from","message","STATICURL","GRAFFITI","dotenv","config","path","loadingImg","constants","Loading","state","loaded","setState","onLoad","images","Background","backgroundImage","responsive","reponsive","classes","data-depth","id","enterButton","audioGuideButton","backgroundImgSrc","Hallway","handleEnterBathroomClick","bind","handleAudioDescriptionClick","e","onEnterBathroom","alert","Audio","autoplay","play","hidden","display","loop","audioSrc","enterStallButton","vacancyAudioSrc","animatedBackground","WaitingRoom","enterMessage","positioningCss","backgroundImg","queuePosition","inLineTotal","currentVacancies","handleEnterRoomClick","backgroundAudio","Stall","handleNavigationClick","target","stallId","direction","CCALogo","Mirrors","credits","href","alt","Hotspots","Chatlist","stallMap","myHex","getColorStyle","hex","color","chats","map","chat","key","userhex","userName","dangerouslySetInnerHTML","Component","notificationSound","Chatbox","channel","myId","members","me","userHex","handleTextChange","data","test","messagesEnd","keyCode","ENDPOINT","payload","channel_name","name","userId","axios","post","value","float","clear","ref","el","type","placeholder","onChange","onKeyDown","bigPhoneImg","BigPhone","conversation","Math","floor","random","length","sendMessage","sentMessages","newMessages","Array","push","prevState","convoMsgs","messageItem","sent","sentMessage","dataDepth","stopPropagation","nativeEvent","stopImmediatePropagation","Phone","handleClick","phoneVibe","showPhone","setInterval","clearInterval","phoneBottom","getElementsByClassName","zoomOutPhone","zoomInPhone","Graffiti","painting","x","y","canvas","noteImg","ctx","newGraffiti","downHandler","upHandler","moveHandler","getPosition","resizeCanvas","isCanvasBlank","loadedCanvas","getContext","window","get","then","res","canvasImage","catch","err","toDataURL","size","height","setAttribute","loadedGraffiti","cssText","rect","getBoundingClientRect","originalEvent","clientX","clientY","preventDefault","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","context","Uint32Array","getImageData","buffer","some","loadedCanvasImage","bigNoteImg","BigNote","Note","noteVibe","showNote","zoomOutNote","zoomInNote","Flush","flushed","audioElement","flushButton","flushedBg","navUpButton","navDownButton","navLeftButton","navRightButton","navBackButton","navExitButton","chatNotification","flushAudio","bgAudioSrc","Room","pusher","presenceChannel","newAlert","occupants","count","currentView","max_occupancy","max","updateOccupants","countOccupants","subscribe","currentState","parseInt","toString","slice","member","unsubscribe","each","info","isSpy","onOccupancyChange","chatroomStall","phoneView","stallFront","exit","onExit","newMsg","seeSpider","App","process","Pusher","cluster","encrypted","spy","auth","params","timeoutId","rooms","pusher_app_members","ahead","inLine","connected","exitAlert","vacancyAlert","appChannel","queueChannel","countMembers","spyOn","startInactivityCheck","userActivityDetected","handleExitStall","handleEnterHallway","handleEnterWaiting","handleEnterRoom","handleMouseMove","toggleExitAlert","toggleVacancyAlert","updateAppMembers","updateMemberCount","updateQueuePosition","roomsCopy","i","num","location","roomId","channelName","split","pop","setTimeout","disconnect","trueOccupants","visitor","sorted","forEach","sort","a","b","entry_time","indexOf","clearTimeout","connection","roomEntered","currentRoom","hide","disconnected","room","reload","vacancies","reduce","onMouseMove","undefined","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1085ab33.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Alert extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.buttonMsg = props.buttonMsg || 'OK';\n  }\n  componentDidMount() {\n\n  }\n  render() {\n    const cancel = this.props.cancellable ? <div className=\"cancel-button\" onClick={this.props.onCancel}>Cancel</div> : null;\n    return (\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"alert-msg\">{this.props.children}</div>\n          <div className=\"alert-buttons\">\n            <div className=\"alert-button\" onClick={this.props.onOK}>{this.buttonMsg}</div>\n            {cancel}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Alert;","import React, { PureComponent } from 'react';\n\nclass Button extends PureComponent {\n  render() {\n    const { top, left, width } = this.props;\n    const style = {\n      position: 'absolute',\n      top: top,\n      left: left,\n      width: width,\n    }\n    var className = this.props.className || \"\";\n    className += \" nav-image\";\n    if (!this.props.noAnimate && this.props.animate === 'pulse') {\n      className += \" animate__animated animate__infinite animate__slower animate__pulse\"\n    }\n    else if (!this.props.noAnimate && this.props.animate === 'shake') {\n      className += \" animate__animated animate__infinite animate__delay-3s animate__headShake\"\n    }\n    if (this.props.imgSrc) {\n      return (\n        <img className={className} src={this.props.imgSrc} onClick={this.props.onClick} text={this.props.altText} style={style} />\n      );\n    }\n    else {\n      return (\n        <div className={className} onClick={this.props.onClick} style={style}>{this.props.children}</div>\n      );\n    }\n  }\n\n}\n\nexport default Button;","import Parallax from 'parallax-js';\n\nexport function restartParallax(selector) {\n  var container = document.getElementById('app');\n  var parallaxInstance = new Parallax(container, {\n    selector: selector,\n    pointerEvents: true,\n  });\n}\n\nexport function scrollToBottom(element) {\n    element.scrollIntoView({ behavior: \"smooth\" });\n  }\n\nexport function sortByEntryTime(occupants) {\n  let sorted = []\n  occupants.forEach((member) => {\n    sorted.push(member);\n  });\n  return sorted.sort((a,b) => {\n    if (parseInt(a.info.entry_time) < parseInt(b.info.entry_time)) { return -1 }\n    if (parseInt(a.info.entry_time) > parseInt(b.info.entry_time)) { return 1 }\n    return 0\n  });\n}\n\nexport function animate(element, animationName) {\n  new Promise((resolve, reject) => {\n    const node = document.querySelector(element);\n    node.classList.add('animate__animated', `animate__${animationName}`);\n\n    function handleAnimationEnd() {\n      node.classList.remove('animate__animated', `animate__${animationName}`);\n      node.removeEventListener('animationend', handleAnimationEnd);\n\n      resolve('Animation ended');\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd);\n  })\n}\n\nexport function createMarkup(msgString) {\n  return {__html: processMsgLinks(msgString)}\n}\n\nexport function processMsgLinks(msgString) {\n  msgString = msgString.replaceAll(/((https?:\\/\\/)?(www)?\\.?[A-Za-z0-9\\-]+\\.[A-Za-z]+)/gi, (match) => {\n    console.log(`matched ${match}`);\n    console.log(!match.includes('http'));\n    if (!match.includes('http')) {\n      match = 'http://' + match;\n    }\n    return `<a href=\"${match}\" target=\"_blank\">${match}</a>`\n  });\n  console.log(msgString);\n  return msgString\n}\n\nexport const PSEUDONYMS = [\n  'someone',\n  'somebody',\n  'a stallmate',\n  'a person',\n  'another person',\n  'person in next stall',\n  'some person',\n];\n\nexport const CONVOS = [\n  [\n    {\n      time: '11:34 AM',\n      from: 'Mom',\n      message: 'I need you to help me write a complaint letter for work',\n    },\n    {\n      time: '11:34 AM',\n      from: 'Mom',\n      message: 'I will call you tonight',\n    },\n    {\n      time: '11:35 AM',\n      from: 'Mom',\n      message: 'And what is the password for the tablet?',\n    },\n    {\n      time: '11:35 AM',\n      from: 'Mom',\n      message: 'Love, Mom 🐶',\n    },\n  ],\n  [\n    {\n      time: '3 days ago',\n      from: 'Me',\n      message: 'Can you please send someone to take a look at our fridge? The freezer isn’t working, we have it on the coldest setting but it’s not cold. We’ve had to throw out the food we had in there. Thanks.',\n    },\n    {\n      time: '1 day ago',\n      from: 'Me',\n      message: 'Hello, I’m writing again re. our fridge. It’s broken and the settings don’t work. Can you please let me know when you are going to send someone to look at it?',\n    },\n    {\n      time: '1:58 PM',\n      from: 'Landlord',\n      message: 'THE FRIDGE IS NEW SO THERE SHOULDN’T BE ANY ISSUE WITH IT. HAVE YOU TRIED CHANGING IT TO THE COLDEST SETTING?',\n    },\n  ],\n  [\n    {\n      time: '10:24 AM',\n      from: 'Me', \n      message: \"I had a really nice time with you!\"\n    },\n    {\n      time: '10:45 AM',\n      from: 'Sky',\n      message: 'yes me too!!'\n    },\n    {\n      time: '11:20 AM',\n      from: 'Sky',\n      message: 'When can I kiss u again?!'\n    },\n  ],\n  [\n    {\n      time: '11:30 PM',\n      from: 'Lily',\n      message: \"Hello! Is 6pm still good to meet tonight?\",\n    },\n    {\n      time: '12:01 PM',\n      from: 'Me',\n      message: \"hey sorry I don’t think I can do tonite anymore… I had a really long day, I want to go home and lie down. Can we do tm?\",\n    },\n    {\n      time: '12:40 PM',\n      from: 'Lily',\n      message: \"Oh no, I’m sorry to hear! I’m busy tomorrow and the rest of this week though, tonight is the only time I have free 😥\",\n    },\n  ],\n];\n\nexport const MAX_OCCUPANCY = 3;\nexport const NUM_ROOMS = 3;\nexport const TIMEOUT = 4 * 60 * 1000;\nexport const STATICURL='https://virtual-bathroom-assets.s3.us-east-2.amazonaws.com';\n\nexport const GRAFFITI = [\n  `${STATICURL}/canvas-uploads/brain.png`,\n  `${STATICURL}/canvas-uploads/tomatoes.png`,\n  `${STATICURL}/canvas-uploads/listening.png`,\n  `${STATICURL}/canvas-uploads/looking.png`,\n  `${STATICURL}/canvas-uploads/nowme.png`,\n  `${STATICURL}/canvas-uploads/toiletpaper.png`,\n];","import React, { PureComponent } from 'react';\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst loadingImg = `${constants.STATICURL}/loading.png`;\n\nclass Loading extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    console.log('Loading complete');\n    this.setState({\n      loaded: true, // images already rendered in first pass of render()\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded) {\n      this.props.onLoad();\n    }\n  }\n\n  render() {\n    let images = [];\n    if (!this.state.loaded) {\n      console.log('Loading...');\n      // preload most images\n    }\n    return (\n      <div className=\"loading\">\n        <div>\n          <img src={loadingImg} className=\"rotating\" />\n          {images}\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default Loading;","import React, { PureComponent } from 'react';\n\nclass Background extends PureComponent {\n  render() {\n    const style = {\n      backgroundImage: `url('${this.props.imgSrc}')`\n    }\n    var responsive = this.props.reponsive ? 'bg-div--responsive' : 'bg-div';\n    const classes = `content ${responsive}`;\n    return (\n      <div className=\"view layer\" data-depth=\"0.1\">\n        <div id={this.props.id} className={classes} style={style}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default Background;","import React, { PureComponent } from 'react';\nimport Background from './Background';\nimport Button from './Button';\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst enterButton = `${constants.STATICURL}/actions/perspective-round-arrow-up.png`;\nconst audioGuideButton = `${constants.STATICURL}/actions/2_audio-guide.png`;\nconst backgroundImgSrc = `${constants.STATICURL}/images/bg-hallway.jpg`;\n\nclass Hallway extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleEnterBathroomClick = this.handleEnterBathroomClick.bind(this);\n    this.handleAudioDescriptionClick = this.handleAudioDescriptionClick.bind(this);\n  }\n\n  handleEnterBathroomClick(e) {\n    this.props.onEnterBathroom(e);\n  }\n\n  handleAudioDescriptionClick(e) {\n    alert('sorry! not yet implemented T__T');\n  }\n\n  render() {\n    return (\n      <Background id=\"hallway\" imgSrc={backgroundImgSrc}>\n        <div className=\"hotspots layer\" data-depth=\"0.1\">\n          <Button onClick={this.handleEnterBathroomClick} altText=\"Enter Bathroom\" imgSrc={enterButton} top=\"75vh\" left=\"51vw\" width=\"9vw\" className=\"arrow--enter-bathroom blue-glow\" />\n          <Button onClick={this.handleAudioDescriptionClick} noAnimate={true} altText=\"Audio Guide\" imgSrc={audioGuideButton} width=\"200px\" top=\"93vh\" left=\"12vw\" />\n        </div>\n      </Background>\n    );\n  }\n\n}\n\nexport default Hallway;","import React, { PureComponent } from 'react';\n\nclass Audio extends PureComponent {\n  componentDidMount() {\n    if (this.props.autoplay) {\n      const audioElement = document.getElementById(this.props.id);\n      audioElement.play();\n    }\n  }\n  render() {\n    const { autoplay } = this.props;\n    var style = {};\n    if (this.props.hidden) {\n      style = {\n        display: 'none',\n      }\n    }\n    return (\n      <audio id={this.props.id} className=\"audio\" style={style} loop={this.props.loop}>\n        <source src={this.props.audioSrc}></source>\n      </audio>\n    );\n  }\n\n}\n\nexport default Audio;","import React, { PureComponent } from 'react';\nimport Background from './Background';\nimport Button from './Button';\nimport Audio from './Audio';\n\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst enterStallButton = `${constants.STATICURL}/actions/perspective-round-arrow-up.png`;\n// const enterStallButton = `${constants.STATICURL}/actions/3_enter-stall.png`;\nconst audioSrc = `${constants.STATICURL}/sounds/outside.mp3`;\nconst backgroundImgSrc = `${constants.STATICURL}/images/bg-waiting-closed.jpg`;\nconst vacancyAudioSrc = `${constants.STATICURL}/sounds/eventually.mp3`;\nconst animatedBackground = `${constants.STATICURL}/images/bg-waiting-opening.gif`;\n\nclass WaitingRoom extends PureComponent {\n  render() {\n    const positioningCss = {\n      top: \"86vh\",\n      left: \"58vw\",\n      position: \"absolute\",\n    };\n\n    let enterMessage;\n    let backgroundImg = backgroundImgSrc;\n    if (this.props.queuePosition > 0 || this.props.queuePosition === 0) {\n      console.log(`Currently ${this.props.queuePosition}/${this.props.inLineTotal}`);\n      if (this.props.queuePosition > 2) {\n        enterMessage = <div className=\"please-wait neon\">&nbsp;&nbsp;Sorry, all stalls are occupied right now.<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;There are {this.props.queuePosition} ahead of you in line. Please wait.</div>;\n      }\n      else { // == 0\n        if (this.props.currentVacancies > 0) {\n          backgroundImg = animatedBackground;\n          enterMessage = <>\n              <Audio id=\"enter-sound\" audioSrc={vacancyAudioSrc} hidden=\"true\" autoplay=\"true\" />\n              <Button className=\"arrow--enter-stall blue-glow\" onClick={this.props.handleEnterRoomClick} altText=\"Enter Stall\" imgSrc={enterStallButton} top={positioningCss.top} left={positioningCss.left}  />\n            </>;\n        }\n        else {\n          enterMessage = <div className=\"please-wait neon\">&nbsp;&nbsp;Sorry, all stalls are occupied right now.<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;It looks like it will be your turn soon, though. Please wait.</div>;\n        }\n      }\n    }\n    else {\n      enterMessage = <div className=\"please-wait neon\" style={positioningCss}>please wait...</div>;\n    }\n    \n    const backgroundAudio = <Audio id=\"background-audio\" audioSrc={audioSrc} hidden=\"true\" autoplay=\"true\" loop={true} />;\n    return (\n      <Background id=\"waiting\" imgSrc={backgroundImg}>\n        {backgroundAudio}\n        <div className=\"hotspots\">\n          {enterMessage}\n        </div>\n      </Background>\n    );\n  }\n\n}\n\nexport default WaitingRoom;","import React, { PureComponent } from 'react';\n// import Button from './Button';\n\nexport default class Stall extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleNavigationClick = this.handleNavigationClick.bind(this);\n  }\n\n  // componentDidMount() {\n  //   console.log(`waiting room mounted`);\n  // }\n\n  handleNavigationClick(target) {\n    this.props.handleNavigationClick(target);\n  }\n\n  render() {\n    const stallId = `stall-${this.props.direction}`;\n    const classes = \"layer \" + this.props.className;\n    return (     \n      <div id={stallId} className={classes} data-depth=\"0.2\">\n        <div className=\"content\">\n            {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport Background from './Background';\n\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst CCALogo = `${constants.STATICURL}/CCA_RGB_colour_e.svg`;\n\nconst backgroundImgSrc = `${constants.STATICURL}/images/bg-mirrors.jpg`;\n\nclass Mirrors extends PureComponent {\n  // constructor(props) {\n  //   super(props);\n  //   // this.handleNavigationClick = this.handleNavigationClick.bind(this);\n  // }\n\n  // handleNavigationClick(target) {\n  //   if (target === 'waiting') {\n  //     this.props.onEnterWaiting();\n  //   }\n  //   else if (target === 'bathroom') {\n  //     this.setState({ currentView: 'bathroom' });\n  //   }\n  // }\n  // \n\n  render() {\n    var credits = <>\n              <div className=\"row\">\n                <h1>MAKE-BELIEVE BATHROOM</h1>\n              </div>\n              <div className=\"credits-content\">\n                <div className=\"row\">\n                  <div className=\"col-1\">\n                    <dl>\n                      <dt>\n                        Created by <strong>Amy Lam</strong>\n                      </dt>\n                    </dl>\n                    <dl>\n                      <dt>Web developer:</dt> \n                      <dd><a href=\"http://nowme.ca\" target=\"_blank\">Naomi Cui</a></dd>\n                      <dt>3D renderings & animations:</dt>\n                      <dd><a href=\"http://www.emersonmaxwell.com\" target=\"_blank\">Emerson Maxwell</a></dd>\n                      <dt>Soundscape:</dt>\n                      <dd><a href=\"www.newchance.biz\" target=\"_blank\">Vic Cheong</a></dd>\n                      <dt>Graffiti:</dt>\n                      <dd><a href=\"www.haeahnkwon.com\" target=\"_blank\">Haeahn Kwon</a></dd>\n                      <dd><a href=\"https://caleysweetnsour.productions\" target=\"_blank\">Caley Feeney</a></dd>\n                      <dt>Audio descriptive guide:</dt>\n                      <dd>Aliya Pabani</dd>    \n                    </dl>\n                    <dl>\n                      <dt>Curator:</dt>\n                      <dd>Jenn Jackson</dd>\n                      <div>With contributions from <strong>Jon McCurley</strong></div>\n                    </dl>\n                    <p>\n                      We acknowledge the support of the <strong>Canada Council for the Arts</strong><br/>\n                      <img className=\"cca-logo\" src={CCALogo} alt=\"Canada Council for the Arts\" />\n                    </p>\n                    <p>\n                      <em>Make-Believe Bathroom</em> was produced with the support of <a href=\"https://www.sfu.ca/galleries.html\" target=\"_blank\"><strong>SFU Galleries</strong></a>.\n                    </p>\n                  </div>\n                  <div className=\"col-2\">\n                    <h2><a href=\"http://freeourpee.publicbathroom.online/\">TOILETS FOR ALL</a></h2>\n                    <a href=\"http://freeourpee.publicbathroom.online/\"><img src=\"https://virtual-bathroom-assets.s3.us-east-2.amazonaws.com/freeourpee/washfinals-small.png\" /></a>\n                    <p>A sticker project in collaboration with TO Toilet Codes. Read more and download the stickers <a href=\"http://freeourpee.publicbathroom.online/\">here</a>.</p>\n                    <h2>SUBMIT A POSTER</h2>\n                    <p>To post a poster or public notice to the <em>Make-Believe Bathroom</em>, please send a PNG file to <strong>amyclam@gmail.com</strong>.</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div id=\"try-again\"><a href=\"/\" className=\"neon\">Try the Make-Believe Bathroom Again?</a></div>\n              </div>\n            </>\n    return (\n      <Background id=\"mirrors\" imgSrc={backgroundImgSrc}>\n        <div className=\"bg-layer\">\n          <div className=\"mirrors-content\">\n          {credits}\n          </div>\n        </div>\n      </Background>\n    );\n  }\n\n}\n\nexport default Mirrors;","import React, { PureComponent } from 'react';\n\nexport default class Hotspots extends PureComponent {\n  // constructor(props) { \n  //   super(props);\n  // }\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div className=\"hotspots layer\" data-depth=\"0.1\">{this.props.children}</div>\n    );\n  }\n\n}\n\n\n","import React, { Component } from 'react';\nimport * as constants from './constants';\n\nexport default class Chatlist extends Component {\n  constructor(props) {\n    super(props);\n    this.stallMap = props.stallMap;\n    this.myHex = props.myHex;\n    this.getColorStyle = this.getColorStyle.bind(this);\n  }\n\n  getColorStyle(hex) {\n    return { color: hex }\n  }\n\n  render() {\n    const chats = this.props.chats.map(chat => \n      <div key={chat.id} className=\"row show-grid\">\n        <div className=\"col-xs-12\">\n          <div className={chat.userhex === this.myHex ? 'chatMessage self' : 'chatMessage' }>\n            <div className=\"box\">\n              <p className=\"user\">\n                <strong style={this.getColorStyle(chat.userhex)}>{ chat.userhex === this.myHex ? 'you' : chat.userName }</strong>\n              </p>\n              <p className=\"message\" dangerouslySetInnerHTML={constants.createMarkup(chat.message)}></p>\n            </div>\n          </div>\n          </div>\n        </div>\n      );\n\n    return (\n      <div id=\"chatlist\">\n        <ul>\n          {chats}\n        </ul>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport Chatlist from './Chatlist';\nimport Audio from './Audio';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\n\nimport * as constants from './constants';\n\ndotenv.config({ path: '.env' });\n\nconst notificationSound = `${constants.STATICURL}/sounds/clearly.mp3`;\n\nexport default class Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.channel = props.channel;\n    this.myId = props.channel.members.me.id;\n    this.userHex = props.userHex;\n    this.userName = props.userName;\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.state = {\n      text: '',\n      chats: [],\n    }\n  }\n\n  componentDidMount() {\n    this.channel.bind('message', data => {\n      this.setState({ chats: [...this.state.chats, data], test: '' });\n    });\n  }\n\n  componentDidUpdate() {\n    constants.scrollToBottom(this.messagesEnd);\n  }\n\n  handleTextChange(e) {\n    if (e.keyCode === 13) { // hit enter on keyboard\n      const payload = {\n        channel_name: this.channel.name,\n        userId: this.myId,\n        userName: this.userName,\n        userhex: this.userHex,\n        message: this.state.text,\n      };\n      var ENDPOINT;\n      if (process.env.NODE_ENV === 'development' ) {\n        ENDPOINT = 'http://localhost:5000/'\n      }\n      else {\n        ENDPOINT = 'https://virtual-bathroom.herokuapp.com/'\n      }\n      axios.post(ENDPOINT + 'message', payload);\n      this.setState({ text: '' });\n      constants.scrollToBottom(this.messagesEnd);\n    }\n    else {\n      this.setState({ text: e.target.value });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chatbox\" className=\"component-box\">\n        <Audio id=\"notification-sound\" audioSrc={notificationSound} hidden=\"true\" />\n        <div className=\"chatlist-container\">\n          <Chatlist chats={this.state.chats} myHex={this.userHex} />\n          <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          value={this.state.text}\n          placeholder=\"chat here...\"\n          onChange={this.handleTextChange}\n          onKeyDown={this.handleTextChange}\n          />\n      </div>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\n// import Button from './Button';\nimport Parallax from 'parallax-js';\n\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst bigPhoneImg = `${constants.STATICURL}/images/closeup-phone.png`;\n\nexport default class BigPhone extends PureComponent {\n  constructor(props) { \n    super(props);\n    this.conversation = constants.CONVOS[Math.floor(Math.random() * Math.floor(constants.CONVOS.length))];\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.state = {\n      text: '',\n      sentMessages: [],\n    }\n  }\n\n  componentDidMount() {\n    constants.scrollToBottom(this.messagesEnd);\n  }\n\n  componentDidUpdate() {\n    constants.scrollToBottom(this.messagesEnd);\n  }\n\n  handleTextChange(e) {\n    if (e.keyCode === 13) { // hit enter on keyboard\n      this.sendMessage();   \n    }\n    else {\n      this.setState({ text: e.target.value });\n    }\n  }\n\n  sendMessage() {\n    if (this.state.text !== '') {\n      let newMessages = Array.from(this.state.sentMessages);\n      newMessages.push(this.state.text);\n      this.setState((prevState) => {\n        return { \n          ...prevState, sentMessages: newMessages, text: '', \n        }\n      }, () => { \n        constants.scrollToBottom(this.messagesEnd);\n      });\n    }   \n  }\n\n  render() {\n    let convoMsgs = this.conversation.map(messageItem => \n      <div className={messageItem.from === 'Me' ? 'phone-msg self' : 'phone-msg'}>\n        <div className=\"user\">\n          <strong className={messageItem.from === 'Me' ? 'hide' : ''}>{messageItem.from}</strong>\n          <span className=\"time\">{messageItem.time}</span>\n        </div>\n        <div className=\"box\">\n          <p className=\"message\">\n            {messageItem.message}\n          </p>\n        </div>\n      </div>\n      );\n    let sent = null;\n    if (this.state.sentMessages.length > 0) {\n      sent = this.state.sentMessages.map((sentMessage) =>  \n        <div className=\"phone-msg self\">\n          <div className=\"user\">\n            <strong className=\"hide\">Me</strong>\n            <span className=\"time\">just now</span>\n          </div>\n          <div className=\"box\">\n            <p className=\"message\" dangerouslySetInnerHTML={constants.createMarkup(sentMessage)}>\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div id=\"big-phone\" className={this.props.className} data-depth={this.props.dataDepth} onClick={this.props.onClick}>\n        <img className=\"phone-img\" src={bigPhoneImg} />\n        <div className=\"phone-convo\">\n          <div className=\"phone-messages\">\n            {convoMsgs}\n            {sent}\n            <div className=\"phone-messages-bottom\" style={{ float:\"left\", clear: \"both\" }}\n               ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n          </div>\n        <div className=\"enter-message\" onClick={(e) => {e.stopPropagation(); e.nativeEvent.stopImmediatePropagation();}}>\n          <input\n            type=\"text\"\n            value={this.state.text}\n            placeholder=\"Reply...\"\n            onChange={this.handleTextChange}\n            onKeyDown={this.handleTextChange}\n            />\n          <div className=\"send-button\" onClick={this.sendMessage}></div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport Button from './Button';\n\nimport * as constants from './constants';\n\nimport axios from 'axios';\nimport dotenv from 'dotenv';\ndotenv.config({ path: '.env' });\n\nvar ENDPOINT;\nif (process.env.NODE_ENV === 'development' ) {\n  ENDPOINT = 'http://localhost:5000/'\n}\nelse {\n  ENDPOINT = 'https://virtual-bathroom.herokuapp.com/'\n}\n\nexport default class Graffiti extends PureComponent {\n  constructor(props) { \n    super(props);\n    this.painting = false;\n    this.position = { x: 0, y: 0 };\n    this.canvas = null;\n    this.noteImg = null;\n    this.ctx = null;\n    this.newGraffiti = this.newGraffiti.bind(this);\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n    this.moveHandler = this.moveHandler.bind(this);\n    this.getPosition = this.getPosition.bind(this);\n    this.resizeCanvas = this.resizeCanvas.bind(this);\n    this.isCanvasBlank = this.isCanvasBlank.bind(this);\n    this.state = {\n      noteImg: null,\n      loaded: false,\n      loadedCanvas: null,\n      newGraffiti: false,\n    }\n  }\n\n  componentDidMount() {\n    this.canvas = document.getElementById(this.props.id);\n\n    if (this.canvas.getContext) {\n      this.ctx = this.canvas.getContext('2d');\n\n      this.canvas.addEventListener('mousedown', this.downHandler);\n      this.canvas.addEventListener('touchstart', this.downHandler);\n      this.canvas.addEventListener('mousemove', this.moveHandler);\n      this.canvas.addEventListener('touchmove', this.moveHandler);\n      this.canvas.addEventListener('mouseup', this.upHandler);\n      this.canvas.addEventListener('touchend', this.upHandler);\n    }\n\n    window.addEventListener('resize', this.resizeCanvas);\n\n    var loadedCanvas;\n    axios.get(`${ENDPOINT}graffiti`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.length > 0) {\n          loadedCanvas = res.data[Math.floor(Math.random() * res.data.length)].canvasImage;\n        }\n        else {\n          console.log(constants.GRAFFITI);\n          loadedCanvas = constants.GRAFFITI[Math.floor(Math.random() * constants.GRAFFITI.length)];\n          console.log(loadedCanvas);\n        }\n        this.setState({ \n          noteImg: document.querySelector('img.note-img'), \n          loaded: true, \n          loadedCanvas: loadedCanvas,\n        }, () => {this.resizeCanvas();});\n      })\n      .catch((err) => { \n        console.log(err); \n      });\n  }\n\n  componentDidUpdate() {\n    this.resizeCanvas();\n  }\n\n  componentWillUnmount() {\n    console.log('unmounting canvas');\n    if (this.canvas) {\n      if (!this.isCanvasBlank(this.canvas)) {\n        var canvasImage = this.canvas.toDataURL();\n        console.log(canvasImage.length);\n\n        axios.post(`${ENDPOINT}draw`, {\n          canvasImage: canvasImage,\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  resizeCanvas() {\n    if (this.canvas && this.state.noteImg) {\n      var size = { width: this.state.noteImg.width * 0.8 , height: this.state.noteImg.height * 0.9 }\n      this.canvas.setAttribute('width', size.width );\n      this.canvas.setAttribute('height', size.height );\n      let loadedGraffiti = document.querySelector('img.loaded-graffiti');\n      if (loadedGraffiti) {\n        loadedGraffiti.style.cssText = `width:${size.width}px;height:${size.height}px`;\n      }\n    }\n  }\n\n  getPosition(e) {\n    if (this.canvas) {\n      var rect = this.canvas.getBoundingClientRect();\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n\n      this.position.x = e.clientX - rect.left;\n      this.position.y = e.clientY - rect.top;\n    }\n  }\n\n  downHandler(e) {\n    this.painting = true;\n    this.getPosition(e);\n    e.preventDefault();\n  }\n\n  upHandler(e) {\n    this.painting = false;\n    e.preventDefault();\n  }\n\n  moveHandler(e) {\n    if (this.painting && this.ctx) {\n      this.ctx.beginPath();\n      this.ctx.lineWidth = 3;\n      // Sets the end of the lines drawn \n      // to a round shape. \n      this.ctx.lineCap = 'round'; \n        \n      this.ctx.strokeStyle = `rgba(0,0,0,${Math.random()*0.2+0.4})`; \n          \n      // The cursor to start drawing \n      // moves to this coordinate \n      this.ctx.moveTo(this.position.x, this.position.y); \n       \n      // The position of the cursor \n      // gets updated as we move the \n      // mouse around. \n      this.getPosition(e); \n       \n      // A line is traced from start \n      // coordinate to this coordinate \n      this.ctx.lineTo(this.position.x , this.position.y); \n        \n      // Draws the line. \n      this.ctx.stroke(); \n    }\n  }\n\n  isCanvasBlank(canvas) {\n    const context = canvas.getContext('2d');\n    const pixelBuffer = new Uint32Array(\n      context.getImageData(0, 0, canvas.width, canvas.height).data.buffer\n    );\n\n    return !pixelBuffer.some(color => color !== 0);\n  }\n\n  newGraffiti(e) {\n    e.stopPropagation(); e.nativeEvent.stopImmediatePropagation();\n    this.setState({ newGraffiti: true, }, () => { this.resizeCanvas(); });\n  }\n\n  render() {\n    var loadedCanvasImage;\n    if (this.state.loadedCanvas) {\n      loadedCanvasImage = <img className={this.state.newGraffiti ? 'loaded-graffiti hide' : 'loaded-graffiti'} src={this.state.loadedCanvas} />;\n    }\n    return (\n      <>\n      {loadedCanvasImage}\n      <canvas id={this.props.id} className={this.props.className} onClick={(e) => {e.stopPropagation(); e.nativeEvent.stopImmediatePropagation();}}>\n      </canvas>\n      <Button className=\"new-graffiti neon\" onClick={this.newGraffiti}>\n        clear drawing\n      </Button>\n      </>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport BigPhone from './BigPhone';\nimport Parallax from 'parallax-js';\n\nimport * as constants from './constants';\n\nexport default class Phone extends PureComponent {\n  constructor(props) { \n    super(props);\n    this.classes = \"bg-layer\";\n    this.handleClick = this.handleClick.bind(this);\n    this.phoneVibe = null;\n    this.state = { showPhone: false, };\n  }\n\n  componentDidMount() {\n    this.phoneVibe = setInterval(() => {\n      constants.animate('#phone-layer', 'shakeX');\n    }, 3.5 * 1000);\n  }\n\n  componentDidUpdate() {\n    constants.restartParallax('.layer');\n    if (this.state.showPhone) {\n      constants.animate('#big-phone', 'rotateInUpLeft');\n    }\n    else {\n      this.phoneVibe = setInterval(() => {\n        constants.animate('#phone-layer', 'shakeX');\n      }, 3.5 * 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    // console.log('unmounting Phone.js');\n    clearInterval(this.phoneVibe);\n  }\n\n  handleClick() {\n    console.log('toggling phone');\n    var phoneBottom = document.getElementsByClassName(\"phone-messages-bottom\")[0];\n    clearInterval(this.phoneVibe);\n    this.setState({ showPhone: !this.state.showPhone }, () => {constants.scrollToBottom(phoneBottom)});\n  }\n\n  render() {\n    var zoomOutPhone = <div id=\"phone-layer\" className={this.classes} onClick={this.handleClick}></div>;\n    var zoomInPhone = \n      <BigPhone onClick={this.handleClick} className=\"bg-layer layer\" dataDepth=\"0.3\"/>;\n    if (this.state.showPhone) {\n      zoomOutPhone = <div id=\"phone-layer\" className='hide' onClick={this.handleClick}></div>;\n    }\n    else {\n      zoomInPhone = \n        <BigPhone className=\"hide\" onClick={this.handleClick} />;\n    }\n    return (\n      <>\n        {zoomInPhone}\n        {zoomOutPhone}\n      </>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport Graffiti from './Graffiti';\nimport Parallax from 'parallax-js';\nimport * as constants from './constants';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst bigNoteImg = `${constants.STATICURL}/images/closeup-note.png`;\n\nexport default class BigNote extends PureComponent {\n  constructor(props) { \n    super(props);\n  }\n\n  // componentDidMount() {\n  // }\n\n  // componentDidUpdate() {\n  // }\n\n  render() {\n    return (\n      <div id=\"big-note\" className={this.props.className} data-depth={this.props.dataDepth} onClick={this.props.onClick}>\n        <Graffiti id=\"note-canvas\" className=\"note-img\" />\n        <img className=\"note-img\" src={bigNoteImg} onClick={(e) => {e.stopPropagation(); e.nativeEvent.stopImmediatePropagation();}}/>\n      </div>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport BigNote from './BigNote';\nimport Parallax from 'parallax-js';\n\nimport * as constants from './constants';\n\nexport default class Note extends PureComponent {\n  constructor(props) { \n    super(props);\n    this.classes = \"bg-layer\";\n    this.handleClick = this.handleClick.bind(this);\n    this.noteVibe = null;\n    this.state = { showNote: false, };\n  }\n\n  componentDidMount() {\n    this.noteVibe = setInterval(() => {\n      constants.animate('#note-layer', 'pulse');\n    }, 3.5 * 1000);\n  }\n\n  componentDidUpdate() {\n    constants.restartParallax('.layer');\n    if (!this.state.showNote) {\n      constants.animate('#big-note', 'fadeInUp');\n    }\n    else {\n      this.noteVibe = setInterval(() => {\n        constants.animate('#note-layer', 'pulse');\n      }, 3.5 * 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    // console.log('unmounting Note.js');\n    clearInterval(this.noteVibe);\n  }\n\n  handleClick() {\n    console.log('toggling note');\n    clearInterval(this.noteVibe);\n    this.setState({ showNote: !this.state.showNote });\n  }\n\n  render() {\n    var zoomOutNote = <div id=\"note-layer\" className={this.classes} onClick={this.handleClick}></div>;\n    var zoomInNote = \n      <BigNote onClick={this.handleClick} className=\"bg-layer\" dataDepth=\"0.3\"/>;\n    if (this.state.showNote) {\n      zoomOutNote = <div id=\"note-layer\" className='hide' onClick={this.handleClick}></div>;\n    }\n    else {\n      zoomInNote = \n        <BigNote className=\"hide\" onClick={this.handleClick} />;\n    }\n    return (\n      <>\n        {zoomInNote}\n        {zoomOutNote}\n      </>\n    );\n  }\n\n}\n","import React, { PureComponent } from 'react';\nimport Button from './Button';\nimport * as constants from './constants';\n\nclass Flush extends PureComponent {\n  constructor(props) { \n    super(props);\n    this.classes = \"flush-button neon\";\n    this.handleClick = this.handleClick.bind(this);\n    this.phoneVibe = null;\n    this.state = { flushed: false, };\n  }\n\n  handleClick() {\n    console.log('flushing');\n    const audioElement = document.getElementById(\"flush-audio\");\n    if (audioElement) {\n      audioElement.play();\n    }\n    if (!this.state.flushed) {\n      this.setState({ flushed: true }, () => {\n        constants.animate('#flushed', 'fadeIn');\n      });\n    }\n  }\n\n  render() {\n    const flushButton = <Button onClick={this.handleClick} className=\"flush-button neon blueglow\">Flush</Button>;\n    const flushedBg = this.state.flushed? <div id=\"flushed\" className=\"bg-layer\"></div> : <div id=\"flushed\" className=\"bg-layer hide\" ></div>;\n\n    return (\n      <>\n      {flushButton}\n      {flushedBg}\n      </>\n    )\n  }\n}\n\nexport default Flush;","import React, { Component } from 'react';\nimport Stall from './Stall';\nimport Button from './Button';\nimport Mirrors from './Mirrors';\nimport Hotspots from './Hotspots';\nimport Chatbox from './Chatbox';\nimport Phone from './Phone';\nimport Note from './Note';\nimport Parallax from 'parallax-js';\nimport Audio from './Audio';\nimport Flush from './Flush';\n\nimport * as constants from './constants';\n\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env' });\n\nconst navUpButton = `${constants.STATICURL}/actions/flat-arrow-up.png`;\nconst navDownButton = `${constants.STATICURL}/actions/flat-arrow-down.png`;\nconst navLeftButton = `${constants.STATICURL}/actions/flat-arrow-left.png`;\nconst navRightButton = `${constants.STATICURL}/actions/flat-arrow-right.png`;\nconst navBackButton = `${constants.STATICURL}/actions/flat-arrow-back.png`;\nconst navExitButton = `${constants.STATICURL}/actions/exit.png`;\nconst chatNotification = `${constants.STATICURL}/chat-notification.svg`;\nconst flushAudio = `${constants.STATICURL}/sounds/short-flush.mp3`;\nconst bgAudioSrc = `${constants.STATICURL}/sounds/inside.mp3`;\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n    this.pusher = props.pusher;\n    this.id = props.id;\n    this.presenceChannel = null;\n    this.me = null;\n    this.state = {\n      newAlert: false,\n      occupants: {members: [],count: 0},\n      userHex: '#ffffff',\n      currentView: 'stall-front',\n      showPhone: false,\n      userName: 'a stallmate',\n    };\n    this.max_occupancy = props.max;\n    this.updateOccupants = this.updateOccupants.bind(this);\n    this.countOccupants = this.countOccupants.bind(this);\n    this.handleNavigationClick = this.handleNavigationClick.bind(this);\n    this.restartParallax = this.restartParallax.bind(this);\n  }\n\n  componentDidMount() {\n    this.presenceChannel = this.pusher.subscribe(`presence-room-${this.id}`);\n    this.presenceChannel.bind('pusher:subscription_succeeded', () => {\n      this.me = this.presenceChannel.members.me.id;\n      this.setState(currentState => {\n        return {\n          userName: constants.PSEUDONYMS[parseInt(this.me) % constants.PSEUDONYMS.length],\n          userHex: '#' + Math.floor(parseInt(this.presenceChannel.members.me.id)*16777215).toString(16).slice(-6)\n        }\n      });\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_added', (member) => {\n      this.updateOccupants(this.presenceChannel.members);\n    });\n    this.presenceChannel.bind('pusher:member_removed', (member) => {\n      this.updateOccupants(this.presenceChannel.members);\n      console.log(`Stall.js: ${member.id} left Stall ${this.id}`);\n    });\n    this.presenceChannel.bind('message', (data) => {\n      if (data.userId !== this.presenceChannel.members.me.id) {\n        const audioElement = document.getElementById(\"notification-sound\");\n        audioElement.play();\n        if (this.state.currentView !== 'stall-right') {\n          this.setState({ newAlert: true });\n        }\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    // console.log(`occupants in stall`);\n    // console.log(this.state.occupants);\n    constants.restartParallax('.layer');\n    console.log('restarting parallax');\n  }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe(`presence-room-${this.id}`);\n  }\n\n  // returns true count of occupants (excluding spies)\n  countOccupants(members) {\n    var count = 0;\n    // console.log(`countOccupants() members in stall ${this.id}:`);\n    if (members.count > 0) {\n      members.each(function (member) {\n        if (!member.info.isSpy) { count++ }\n      });\n    }\n    return count\n  }\n\n  restartParallax() {\n    var container = document.getElementById('app');\n    var parallaxInstance = new Parallax(container, {\n      selector: '.layer',\n      pointerEvents: true,\n    });\n  }\n\n  updateOccupants(members) {\n    // console.log(`Stall.js updateOccupants: stall id ${this.id}, numOccupants ${members.count}`);\n    this.setState({\n      occupants: members,\n    }, () => this.props.onOccupancyChange(this.countOccupants(members), 'room', this.id));\n  }\n\n  handleNavigationClick(target) {\n    if (target === 'stall-right') {\n      this.setState({ currentView: target, newAlert: false })\n    }\n    else {\n      this.setState({ currentView: target });\n    }\n  }\n\n  render() {\n    const stallFront = \n          <Stall direction=\"front\" handleNavigationClick={this.handleNavigationClick} className={this.state.currentView === 'stall-front' ? 'bg-div' : 'hide'}>\n            <Note />\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-up')} \n                altText=\"Stare At Ceiling\"\n                imgSrc={navUpButton}\n                top=\"7vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-left')} \n                altText=\"Check Phone\"\n                imgSrc={navLeftButton}\n                top=\"53vh\"\n                left=\"10vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-down')} \n                altText=\"Cry\"\n                imgSrc={navDownButton}\n                top=\"88vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-right')} \n                altText=\"Talk to Stranger\"\n                imgSrc={navRightButton}\n                top=\"53vh\"\n                left=\"90vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-back')} \n                altText=\"Flush/Exit\"\n                imgSrc={navBackButton}\n                top=\"98vh\"\n                left=\"23vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n    var currentView = null;\n    const exit = <Button \n      className=\"nav-image\"\n      onClick={this.props.onExit}\n      top=\"12vh\"\n      left=\"84vw\"\n      width=\"80px\"\n      imgSrc={navExitButton} \n      />;\n    const newMsg = <Button \n      className={this.state.newAlert ? \"blue-glow msg-alert\" : \"hide\"}\n      onClick={() => this.handleNavigationClick('stall-right')}\n      top=\"90vh\"\n      left=\"90vw\"\n      width=\"80px\"\n      imgSrc={chatNotification} \n      />;\n    switch (this.state.currentView) {\n      case 'stall-up':\n        let seeSpider = this.me % 2 === 0 ? 'bg-layer' : 'hide';\n        currentView = \n          <Stall direction=\"up\" handleNavigationClick={this.handleNavigationClick} className=\"bg-div--responsive\">\n            <div id=\"hanging-spider\" className={seeSpider}></div>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Flush/Exit\"\n                imgSrc={navDownButton}\n                top=\"87vh\"\n                left=\"57vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        break;\n      case 'stall-left':\n        break;\n      case 'stall-right': // contains chatbo\n        break;\n      case 'stall-down':\n        currentView = \n          <Stall direction=\"down\" handleNavigationClick={this.handleNavigationClick} className=\"bg-div\">\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Gaze at Stall Door\"\n                imgSrc={navUpButton}\n                top=\"7vh\"\n                left=\"50vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n        break;\n      case 'stall-back':\n        currentView = \n          <Stall direction=\"back\" handleNavigationClick={this.handleNavigationClick} className=\"bg-div\">\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Gaze at Stall Door\"\n                imgSrc={navBackButton}\n                top=\"94vh\"\n                left=\"76vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-right')} \n                altText=\"Talk to Stranger\"\n                imgSrc={navLeftButton}\n                top=\"53vh\"\n                left=\"10vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-left')} \n                altText=\"Check Phone\"\n                imgSrc={navRightButton}\n                top=\"53vh\"\n                left=\"90vw\"\n                 />\n              <Flush />\n            </Hotspots>\n          </Stall>;\n        break;\n      case 'mirrors':\n        currentView =\n          <Mirrors />;\n      case 'stall-front':\n      default:\n        break;\n    }\n    var chatroomStall, phoneView;\n    if (this.presenceChannel && this.me) {\n      chatroomStall = <Stall className={this.state.currentView === 'stall-right' ? 'bg-div' : 'hide' } direction=\"right\" handleNavigationClick={this.handleNavigationClick}>\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-up')} \n                altText=\"Stare At Ceiling\"\n                imgSrc={navUpButton}\n                top=\"7vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-down')} \n                altText=\"Cry\"\n                imgSrc={navDownButton}\n                top=\"88vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Gaze at Stall\"\n                imgSrc={navLeftButton}\n                top=\"53vh\"\n                left=\"10vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-back')} \n                altText=\"Flush\"\n                imgSrc={navRightButton}\n                top=\"53vh\"\n                left=\"90vw\"\n                 />\n              <Chatbox userName={this.state.userName} occupants={this.state.occupants} userHex={this.state.userHex} channel={this.presenceChannel} />\n            </Hotspots>\n        </Stall>;\n      phoneView = \n          <Stall direction=\"left\" handleNavigationClick={this.handleNavigationClick} className={this.state.currentView === 'stall-left' ? 'bg-div--responsive' : 'hide' }>\n            <Phone />\n            <Hotspots>\n              <Button \n                onClick={() => this.handleNavigationClick('stall-up')} \n                altText=\"Stare At Ceiling\"\n                imgSrc={navUpButton}\n                top=\"7vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-down')} \n                altText=\"Cry\"\n                imgSrc={navDownButton}\n                top=\"88vh\"\n                left=\"50vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-front')} \n                altText=\"Gaze at Stall\"\n                imgSrc={navRightButton}\n                top=\"53vh\"\n                left=\"90vw\"\n                 />\n              <Button \n                onClick={() => this.handleNavigationClick('stall-back')} \n                altText=\"Flush\"\n                imgSrc={navLeftButton}\n                top=\"53vh\"\n                left=\"10vw\"\n                 />\n            </Hotspots>\n          </Stall>;\n    }\n    return (\n      <div className=\"view\">\n        <div className=\"hide\">\n          <h2>Room {this.id}: {this.countOccupants(this.state.occupants)} / {this.max_occupancy}</h2>\n        </div>\n        <Audio id=\"background-audio\" audioSrc={bgAudioSrc} hidden=\"true\" autoplay=\"true\" loop={true} />\n        <Audio id=\"flush-audio\" audioSrc={flushAudio} hidden=\"true\" />\n        {currentView}\n        {stallFront}\n        {phoneView}\n        {chatroomStall}\n        {exit}\n        {newMsg}\n      </div>\n    );\n  }\n\n}\n\nexport default Room;","import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport dotenv from 'dotenv';\n\nimport Alert from './Alert';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Hallway from './Hallway';\nimport WaitingRoom from './WaitingRoom';\nimport Room from './Room';\nimport Mirrors from './Mirrors';\n\nimport 'animate.css/animate.min.css';\nimport './css/normalize.css';\nimport './css/App.css';\n\nimport * as constants from './constants';\n\ndotenv.config({ path: '.env' });\n// const LOGGING = null;\nconst LOGGING = process.env.NODE_ENV === 'development';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(`running in ${process.env.NODE_ENV} mode`); \n\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n      encrypted: true,\n    });\n    this.spy = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      encrypted: true,\n      cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\n      auth: {\n        params: {\n          isSpy: true\n        }\n      }\n    });\n    this.timeoutId = null;\n    this.state = {\n      currentView: { type: 'loading', id: null },\n      rooms: [], // array of Room components\n      pusher_app_members: { count: 0 }, // pusher members object\n      ahead: null,\n      inLine: 0,\n      message: '',\n      connected: true,\n      exitAlert: false,\n      vacancyAlert: false,\n    };\n\n    this.appChannel = null;\n    this.queueChannel = null;\n\n    this.countMembers = this.countMembers.bind(this);\n    this.spyOn = this.spyOn.bind(this);\n    this.startInactivityCheck = this.startInactivityCheck.bind(this);\n    this.userActivityDetected = this.userActivityDetected.bind(this);\n    this.handleExitStall = this.handleExitStall.bind(this);\n    this.handleEnterHallway = this.handleEnterHallway.bind(this);\n    this.handleEnterWaiting = this.handleEnterWaiting.bind(this);\n    this.handleEnterRoom = this.handleEnterRoom.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.toggleExitAlert = this.toggleExitAlert.bind(this);\n    this.toggleVacancyAlert = this.toggleVacancyAlert.bind(this);\n    this.updateAppMembers = this.updateAppMembers.bind(this);\n    this.updateMemberCount = this.updateMemberCount.bind(this);\n    this.updateQueuePosition = this.updateQueuePosition.bind(this);\n  }\n\n  componentDidMount() {\n    // initiate all rooms\n    let roomsCopy = [];\n    for (var i = 0; i < constants.NUM_ROOMS; i++) {\n      roomsCopy.push({ id: i, occupants: 0 });\n    }\n    // update rooms state\n    this.setState({\n      rooms: roomsCopy,\n    }, () => {\n      // send spy to update room vacancies\n      this.spyOn('presence-queue', 'waiting');\n      for (var i = 0; i < constants.NUM_ROOMS; i++) {\n        this.spyOn(`presence-room-${i}`, 'room');\n      }\n    });\n\n    // main app channel\n    this.appChannel = this.pusher.subscribe('presence-app');\n    this.appChannel.bind('pusher:subscription_succeeded', (member) => {\n      // console.log(member);\n      this.updateAppMembers(this.appChannel.members);\n      if (LOGGING) { console.log('Subscribed to Bathroom App'); }\n    });\n    this.appChannel.bind('pusher:member_added', (member) => {\n      this.updateAppMembers(this.appChannel.members);\n      if (LOGGING) {\n        console.log(`${member.id} joined Bathroom App`);\n        console.log(this.appChannel.members);\n      }\n    });\n    // someone left App\n    this.appChannel.bind('pusher:member_removed', (member) => {\n      this.updateAppMembers(this.appChannel.members);\n      if (LOGGING) { \n        console.log(`${member.id} left Bathroom App`); \n        console.log(this.appChannel.members);\n      }\n    });\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state.currentView !== nextState.currentView || \n  //     this.state.rooms !== nextState.rooms\n\n  //     ) {\n  //     return true\n  //   }\n  //   return false\n  // }\n\n  componentWillUnmount() {\n    this.pusher.unsubscribe('presence-app');\n  }\n\n  // returns the number of members connected to channel\n  // excluding spies\n  countMembers(channel) {\n    var count = 0;\n    channel.members.each(function (member) {\n      if (!member.info.isSpy) { \n        // console.log(`user: ${member.id} in ${channel.name}`); \n        count++; \n      }\n    });\n    return count\n  };\n\n  // generic 'true' member count (excludes spies)\n  // num      :  number of true members\n  // location :  location (by view name)\n  // roomId   :  presence-room id (if in stall)\n  // RETURNS  :  null\n  updateMemberCount(num, location, roomId) {\n    if (location === 'room') {\n      var roomsCopy = Array.from(this.state.rooms);\n      roomsCopy[roomId] = { id: roomId, occupants: num };\n      this.setState(currentState => {\n        return {\n          rooms: roomsCopy,\n        }\n      });\n    }\n    else if (location === 'waiting') {\n      this.setState(currentState => {\n        return { inLine: num }\n      });\n    }\n  }\n\n  // in app\n  updateAppMembers(members) {\n    this.setState((prevState) => {\n      return { pusher_app_members: members, }\n    });\n  }\n\n  // spy on a channel\n  spyOn(channelName, location) {\n    var channel = this.spy.subscribe(channelName);\n    var roomId = null;\n    if (location === 'room') {\n      roomId = channelName.split('-').pop();\n    }\n    if (LOGGING) {\n      console.log(`trying to spy on ${channel.name}`);\n    }\n    channel.bind(\"pusher:subscription_succeeded\", () => {\n      // if (LOGGING) { console.log(`spying on ${channelName}`); }\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n    channel.bind(\"pusher:member_added\", (member) => {\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n    channel.bind(\"pusher:member_removed\", (member) => {\n      if (!member.info.isSpy) { if (LOGGING) { console.log(`${member.id} left ${channelName}`); } }\n      this.updateMemberCount(this.countMembers(channel), location, roomId);\n    });\n  };\n\n  startInactivityCheck() {\n    // console.log('starting timer for inactivity');\n    this.timeoutId = window.setTimeout(() => {\n      this.pusher.disconnect();\n    }, constants.TIMEOUT); // SET TIMEOUT: time out after 5 minutes\n  }\n\n  updateQueuePosition(presenceChannel) {\n    let me = presenceChannel.members.me.id;\n    let trueOccupants = [];\n    if (presenceChannel.members.count > 0) {\n      presenceChannel.members.each((visitor) => {\n        if (!visitor.info.isSpy) {\n          trueOccupants.push(visitor);\n        }\n      });\n      trueOccupants = constants.sortByEntryTime(trueOccupants);\n    }\n    if (LOGGING) {\n      console.log(`trueOccupants:`);\n      console.log(trueOccupants);\n    }\n    let ahead = trueOccupants.map((e) => { return e.id.toString() }).indexOf(me.toString());\n    this.setState({ ahead: ahead });\n  }\n\n  userActivityDetected() {\n    // timeout can be cleared from anywhere\n    if (this.timeoutId !== null) {\n      window.clearTimeout(this.timeoutId);\n    }\n    // can be timed out of stall\n    if (this.state.currentView.type === 'room') {\n      this.startInactivityCheck();\n    }\n    // can be timed out at head (first 3) of queue\n    if (this.state.currentView.type === 'waiting' && this.state.ahead < 3) {\n      this.startInactivityCheck();\n    }\n    if (this.pusher.connection.state === 'disconnected') {\n      this.setState({ connected: false });\n      // alert(`You've been ushered out for taking too long! Please line up again to re-enter the bathroom.`);\n      // window.location.reload();\n    }\n  }\n\n  toggleExitAlert() {\n    this.setState(currentState => {\n      return {\n        exitAlert: !currentState.exitAlert,\n      }\n    });\n  }\n\n  toggleVacancyAlert() {\n    this.setState(currentState => {\n      return {\n        vacancyAlert: !currentState.vacancyAlert,\n      }\n    });\n  }\n\n  /* BEGIN: View transition functions \n    -----------------------------------\n  */\n  // stall -> mirrors\n  handleExitStall(e) {\n    this.setState(currentState => {\n      return {\n        currentView: { type: 'mirrors', id: null },\n        exitAlert: false,\n      }\n    },\n    () => { constants.restartParallax('.layer');\n    });\n  }\n\n  handleEnterHallway(e) {\n    this.setState(currentState => {\n      return {\n        currentView: { type: 'hallway', id: null },\n      }\n    },\n    () => {constants.restartParallax('.layer');});\n  }\n\n  // hallway -> wait for stall\n  handleEnterWaiting(e) {\n    this.setState(currentState => {\n      return {\n        currentView: { type: 'waiting', id: null },\n      }\n    },\n    () => { \n      constants.restartParallax('.layer'); \n      this.queueChannel = this.pusher.subscribe(`presence-queue`);\n      this.queueChannel.bind('pusher:subscription_succeeded', () => {\n        console.log('Joined Waiting Room');\n        this.updateMemberCount(this.countMembers(this.queueChannel), 'waiting');\n        this.updateQueuePosition(this.queueChannel);\n      });\n      this.queueChannel.bind('pusher:member_added', () => {\n        this.updateMemberCount(this.countMembers(this.queueChannel), 'waiting');\n      });\n      this.queueChannel.bind('pusher:member_removed', (member) => {\n        this.updateMemberCount(this.countMembers(this.queueChannel), 'waiting');\n        this.updateQueuePosition(this.queueChannel);\n        if (!member.info.isSpy) { console.log(`WaitingRoom.js: someone left the queue`); }\n      });\n\n    });\n  }\n\n  // waiting -> stall\n  handleEnterRoom(e) {\n    var roomEntered = false;\n    this.pusher.unsubscribe('presence-queue'); \n\n    // check all rooms for vacancy\n    for (var i = 0; !roomEntered && i < this.state.rooms.length; i++) {\n      var currentRoom = {...this.state.rooms[i]};\n      let roomId = i;\n      if (currentRoom.occupants < constants.MAX_OCCUPANCY) {\n        this.updateMemberCount(currentRoom.occupants+1, 'room', i);\n        this.setState(currentState => {\n          return {\n            currentView: { type: 'room', id: roomId },\n          };\n        }, () => { constants.restartParallax('.layer') });\n        roomEntered = true;\n      }\n      else {\n        console.log(`Room ${i} full`);\n      }\n    }\n\n    if (!roomEntered) {\n      this.toggleVacancyAlert();\n    }\n  }\n\n  handleMouseMove() {\n    this.userActivityDetected();\n  }\n\n  render() {\n    var hide = false;\n    if (process.env.NODE_ENV === 'production') {\n      hide = 'hide';\n    }\n\n    // if (LOGGING) { console.log('rendering App.js'); }\n    // if (LOGGING) { console.log(this.state.rooms); hide = null }\n\n    // Render debug console data\n    var rooms = 'Initiating rooms...';\n    if (this.state.rooms.length === constants.NUM_ROOMS) {\n      rooms = this.state.rooms.map((room) =>\n        <li key={room.id.toString()}><strong>Room {room.id}:</strong> {room.occupants}/{constants.MAX_OCCUPANCY}</li>\n      );\n    }\n\n    // disconnected alert\n    var disconnected;\n    if (!this.state.connected) {\n      disconnected = \n        <Alert id=\"disconnected\" onOK={() => {window.location.reload();}}>\n          You've been ushered out for taking too long!<br />Please line up again to re-enter the bathroom.\n        </Alert>;\n    }\n\n    // vacancy alert\n    var noVacancies;\n    if (this.state.vacancyAlert) {\n      noVacancies = \n      <Alert onOK={this.toggleVacancyAlert}>\n        Sorry! No vacant stalls available.<br/>\n        Please wait.\n      </Alert>;\n    }\n\n    // exit alert\n    var exitAlert;\n    if (this.state.exitAlert) {\n      exitAlert = \n        <Alert id=\"exit-alert\" cancellable={true} onOK={this.handleExitStall} onCancel={this.toggleExitAlert}>\n          Ready to leave the bathroom?\n        </Alert>;\n    }\n\n    const vacancies = constants.MAX_OCCUPANCY * constants.NUM_ROOMS - this.state.rooms.map((room) => room.occupants ).reduce((a, b) => a + b, 0);\n    let currentView = <Loading onLoad={this.handleEnterHallway} />;\n    if (this.state.currentView.type === 'hallway') {\n      currentView = <Hallway onEnterBathroom={this.handleEnterWaiting} />;\n    } \n    else if (this.state.currentView.type === 'mirrors') {\n      currentView = <Mirrors />;\n    }\n    else if (this.state.currentView.type === 'waiting') { \n      currentView = <WaitingRoom queuePosition={this.state.ahead} inLineTotal={this.state.inLine} currentVacancies={vacancies} handleEnterRoomClick={this.handleEnterRoom} />; \n    }\n    if (this.state.currentView.type === 'room') {\n      currentView = <Room id={this.state.currentView.id} pusher={this.pusher} max={constants.MAX_OCCUPANCY} onOccupancyChange={this.updateMemberCount} onExit={this.toggleExitAlert} />;\n    }\n    return (\n      <div id=\"app\" onMouseMove={this.handleMouseMove}>\n        <div id=\"debug-console\" className={hide ? 'hide' : undefined}>\n          <div>\n            THE APP IS RUNNING IN <strong>{process.env.NODE_ENV}</strong> MODE<br/>\n            this box is for development purposes only\n          </div>\n          <div>\n            <div>Number of Rooms: {constants.NUM_ROOMS}</div>\n            <div><strong>Current Users:</strong> {this.state.pusher_app_members.count}</div>\n            <div><strong>In line:</strong> {this.state.inLine}</div>\n            <div><strong>Vacancies:</strong> {vacancies}</div>\n          </div>\n          <div>\n            <strong>Rooms:</strong>\n            {rooms}\n          </div>\n        </div>\n        {exitAlert}\n        {disconnected}\n        {currentView}\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}